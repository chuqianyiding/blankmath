{"version":3,"sources":["img/bee-705412.svg","constants/directions.ts","constants/cardData.ts","components/Card/Card.tsx","components/Card/index.ts","containers/Card/index.ts","containers/Card/Card.tsx","containers/HomePage/index.ts","containers/HomePage/HomePage.tsx","components/ProblemNumber/ProblemNumber.tsx","components/ProblemNumber/index.ts","components/SheetSelect/SheetSelect.tsx","components/SheetSelect/index.ts","components/NumberOfDigits/NumberOfDigits.tsx","components/NumberOfDigits/index.ts","containers/GreaterThanLessThan/GreaterThanLessThan.tsx","containers/GreaterThanLessThan/index.ts","utils/greaterThanLessThanGenerator.ts","utils/common.ts","utils/addThreeNumbersGenerator.ts","containers/AddThreeNumbers/AddThreeNumbers.tsx","utils/addMinusThreeNumbersGenerator.ts","containers/AddMinusThreeNumbers/AddMinusThreeNumbers.tsx","containers/AddMinusThreeNumbers/index.ts","utils/multiplicationGenerator.ts","components/ProblemDirection/ProblemDirection.tsx","components/ProblemDirection/index.ts","containers/Multiplication/Multiplication.tsx","containers/Multiplication/index.ts","utils/multiplicationMNGenerator.ts","containers/MultiplicationMissingNumber/MultiplicationMissingNumber.tsx","containers/MultiplicationMissingNumber/index.ts","components/NumberRange/NumberRange.tsx","components/NumberRange/index.ts","utils/additionGenerator.ts","constants/filters.ts","selectors/additionSelector.ts","containers/Addition/Addition.tsx","containers/Addition/index.ts","utils/additionMNGenerator.ts","selectors/additionMNSelector.ts","containers/AdditionMissingNumber/AdditionMissingNumber.tsx","containers/AdditionMissingNumber/index.ts","utils/subtractionGenerator.ts","selectors/substractionSelector.ts","containers/Subtraction/Subtraction.tsx","containers/Subtraction/index.ts","utils/subtractionMNGenerator.ts","selectors/subtractionMNSelector.ts","containers/SubtractionMissingNumber/SubtractionMissingNumber.tsx","containers/SubtractionMissingNumber/index.ts","components/Header/index.ts","components/Header/Header.tsx","utils/addThreeNumbersMNGenerator.ts","containers/AddThreeMissingNumber/AddThreeMissingNumber.tsx","containers/AddThreeMissingNumber/index.ts","selectors/mixedAddMinusSelector.ts","containers/MixedAddMinus/MixedAddMinus.tsx","containers/MixedAddMinus/index.ts","utils/mixedAddMinusGenerator.ts","containers/MixedAddMinusMN/MixedAddMinusMN.tsx","containers/MixedAddMinusMN/index.ts","utils/mixedAddMinusMNGenerator.ts","utils/divisionGenerator.ts","containers/Division/Division.tsx","containers/Division/index.ts","utils/divisionMNGenerator.ts","containers/DivisionMissingNumber/DivisionMissingNumber.tsx","containers/DivisionMissingNumber/index.ts","containers/MixedTimesDivide/MixedTiemsDivide.tsx","containers/MixedTimesDivide/index.ts","utils/mixedTimesDivideGenerator.ts","containers/MixedTimesDivideMN/MixedTimesDivideMN.tsx","containers/MixedTimesDivideMN/index.ts","utils/mixedTimesDivideMNGenerator.ts","containers/App/index.ts","containers/App/App.tsx","serviceWorker.ts","store/configureStore.ts","index.tsx","reducers/greaterThanLessThanReducer.ts","reducers/addThreeNumbersReducer.ts","reducers/addMinusThreeNumbersReducer.ts","reducers/addThreeNumbersMNReducer.ts","reducers/multiplicationReducer.ts","reducers/multiplicationMNReducer.ts","reducers/common.ts","reducers/additionReducer.ts","reducers/additionMNReducer.ts","reducers/subtractionReducer.ts","reducers/subtractionMNReducer.ts","reducers/mixedAddMinusReducer.ts","reducers/mixedAddMinusMNReducer.ts","reducers/divisionReducer.ts","reducers/divisionMNReducer.ts","reducers/mixedTimesDivideReducer.ts","reducers/mixedTimesDivideMNReducer.ts","reducers/index.ts","store/configureStore.prod.ts","constants/ranges.ts","actions/additionActions.ts","actions/subtractionActions.ts","actions/mixedAddMinusActions.ts","actions/mixedAddMinusMNActions.ts","actions/additionMNActions.ts","actions/subtractionMNActions.ts","actions/multiplicationActions.ts","actions/divisionActions.ts","actions/mixedTimesDivideActions.ts","actions/mixedTimesDivideMNActions.ts","actions/greaterThanLessThanActions.ts","actions/addThreeNumbersActions.ts","actions/addMinusThreeNumbersActions.ts","actions/multiplicationMNActions.ts","actions/addThreeNumbersMNActions.ts","actions/divisionMNActions.ts"],"names":["module","exports","Direction","cardData","key","sign","title","subtitle","link","getSignIcon","faPlus","faMinus","faTimes","faDivide","faGreaterThan","faLessThan","Card","onClick","className","map","item","idx","icon","size","withRouter","props","history","push","HomePage","src","bee","alt","problems","value","label","ProblemNumber","problemValue","onProblemNumberChange","FormControl","component","FormLabel","RadioGroup","row","aria-label","name","onChange","FormControlLabel","control","Radio","color","useStyles","makeStyles","createStyles","menuPaper","maxHeight","pages","Array","from","_","i","SheetSelect","sheetValue","onValueChange","classes","React","useState","open","setOpen","Select","labelId","id","onClose","onOpen","MenuProps","paper","MenuItem","options","NumberOfDigits","digitValue","onDigitChange","mapDispatchToProps","updateProblemNumber","updateNumberOfDigits","updateSheetNumber","GreatThanLessThanPage","connect","state","greaterThanLessThanData","problemNumber","digitNumber","sheetNumber","addThreeNumbersData","event","target","Button","variant","allProblems","keys","reduce","all","count","result","range","set","Set","c","a1","Math","floor","random","a2","hash","has","add","generateData","parseInt","axios","post","config","PDFGeneratorEndpoint","equations","countPerPage","then","resp","window","data","getRandomIntFromInterval","min","max","isSmallAddendLessThan10","isSubtrahendLessThan10","generateWithTemplate","arr","generateThreeNumberTemplate","generateThreeNumbers","a3","generateThreeNumbersArray","template","signV","AddMinusThreeNumbersPage","addMinusThreeNumbersData","generateMultiplication","generateMultiplicationArray","dirs","HORIZONTAL","VERTICAL","ProblemDirection","problemDirection","onDirectionchange","updateProblemDirection","MultiplicationPage","multiplicationData","generateMultiplicationMN","MultiplicationMNPage","multiplicationMNData","NumberRange","lower","upper","onFromChange","onToChange","fromValue","toValue","isFromValueError","isToValueError","defaultHelperText","TextField","type","error","InputLabelProps","shrink","helperText","defaultProps","generateAddition","to","restrictions","dupCnt","length","includes","generateAdditionArray","selectAdditionData","additionData","selectDisableCreateBtn","updateFromValue","updateToValue","updateRestrictions","AdditionPage","restrictionsCheckedArr","restrictionsChecked","disableCreateBtn","LOWER_RANGE","UPPER_RANGE","FormGroup","Checkbox","checked","disabled","generateAdditionMN","generateAdditionMNArray","selectAdditionMNData","additionMNData","AdditionMNPage","generateSubtraction","generateSubtractionArray","selectSubtractionData","subtractionData","SubtractionPage","generateSubstractionMN","generateSubstractionMNArray","selectSubtractionMNData","subtractionMNData","SubtractionMNPage","Header","onClickLogo","generateThreeMissingNumbers","p","valid","AddThreeMissingNumber","addThreeNumbersMNData","selectMixedAddMinusData","mixedAddMinusData","MixedAddMinus","additionArr","subtractionArr","generateMixedAddMinus","MixedAddMinusMN","mixedAddMinusMNData","generateMixedAddMinusMN","generateDivision","generateDivisionArray","DivisionPage","divisionData","generateDivisionMN","DivisionMNPage","divisionMNData","MixedTimesDividePage","mixedTimesDivideData","multiplicationArr","divisionArr","generateMixedTimesDivide","MixedTimesDivideMNPage","mixedTimesDivideMNData","generateMixedTimesDivideMN","App","Container","exact","path","AddThreeNumbersPage","MixedAddMinusPage","MixedAddMinusMNPage","Boolean","location","hostname","match","configureStore","store","require","default","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","initialState","action","greaterThanLessThanActionTypes","UPDATE_PROBLEM_NUMBER_GL","payload","UPDATE_NUMBER_OF_DIGITS_GL","UPDATE_SHEET_NUMBER_GL","addThreeNumbersActionTypes","UPDATE_PROBLEM_NUMBER_ADDTHREE","UPDATE_NUMBER_OF_DIGITS_ADDTHREE","UPDATE_SHEET_NUMBER_ADDTHREE","addMinusThreeNumbersActionTypes","UPDATE_PROBLEM_NUMBER_ADDMINUSTHREE","UPDATE_NUMBER_OF_DIGITS_ADDMINUSTHREE","UPDATE_SHEET_NUMBER_ADDMINUSTHREE","addThreeNumbersMNActionTypes","UPDATE_PROBLEM_NUMBER_ADDTHREE_MN","UPDATE_NUMBER_OF_DIGITS_ADDTHREE_MN","UPDATE_SHEET_NUMBER_ADDTHREE_MN","multiplicationActionTypes","UPDATE_PROBLEM_NUMBER_MULTIPLICATION","UPDATE_PROBLEM_DIRECTION_MULTIPLICATION","UPDATE_NUMBER_OF_DIGITS_MULTIPLICATION","UPDATE_SHEET_NUMBER_MULTIPLICATION","multiplicationMNActionTypes","UPDATE_PROBLEM_NUMBER_MULTIPLICATION_MN","UPDATE_NUMBER_OF_DIGITS_MULTIPLICATION_MN","UPDATE_SHEET_NUMBER_MULTIPLICATION_MN","getFormValueError","vint","toint","getToValueError","fromint","checkboxName","stateCopy","slice","filter","addtionActionTypes","UPDATE_PROBLEM_ADDITION","UPDATE_PROBLEM_DIRECTION_ADDITION","UPDATE_FROM_VALUE_ADDITION","UPDATE_TO_VALUE_ADDITION","UPDATE_RESTRICTION_ADDITION","UPDATE_SHEET_NUMBER_ADDITION","addtionMNActionTypes","UPDATE_PROBLEM_ADDITION_MN","UPDATE_FROM_VALUE_ADDITION_MN","UPDATE_TO_VALUE_ADDITION_MN","UPDATE_RESTRICTION_ADDITION_MN","UPDATE_SHEET_NUMBER_ADDITION_MN","subtractionActionTypes","UPDATE_PROBLEM_SUBTRACTION","UPDATE_PROBLEM_DIRECTION_SUBTRACTION","UPDATE_FROM_VALUE_SUBTRACTION","UPDATE_TO_VALUE_SUBTRACTION","UPDATE_RESTRICTION_SUBTRACTION","UPDATE_SHEET_NUMBER_SUBTRACTION","subtractionMNActionTypes","UPDATE_PROBLEM_SUBTRACTION_MN","UPDATE_FROM_VALUE_SUBTRACTION_MN","UPDATE_TO_VALUE_SUBTRACTION_MN","UPDATE_RESTRICTION_SUBTRACTION_MN","UPDATE_SHEET_NUMBER_SUBTRACTION_MN","mixedAddMinusActionTypes","UPDATE_PROBLEM_ADDMINUS","UPDATE_PROBLEM_DIRECTION_ADDMINUS","UPDATE_FROM_VALUE_ADDMINUS","UPDATE_TO_VALUE_ADDMINUS","UPDATE_RESTRICTION_ADDMINUS","UPDATE_SHEET_NUMBER_ADDMINUS","mixedAddMinusMNActionTypes","UPDATE_PROBLEM_ADDMINUS_MN","UPDATE_PROBLEM_DIRECTION_ADDMINUS_MN","UPDATE_FROM_VALUE_ADDMINUS_MN","UPDATE_TO_VALUE_ADDMINUS_MN","UPDATE_RESTRICTION_ADDMINUS_MN","UPDATE_SHEET_NUMBER_ADDMINUS_MN","divisionActionTypes","UPDATE_PROBLEM_NUMBER_DIVISION","UPDATE_PROBLEM_DIRECTION_DIVISION","UPDATE_NUMBER_OF_DIGITS_DIVISION","UPDATE_SHEET_NUMBER_DIVISION","divisionMNActionTypes","UPDATE_PROBLEM_NUMBER_DIVISION_MN","UPDATE_NUMBER_OF_DIGITS_DIVISION_MN","UPDATE_SHEET_NUMBER_DIVISION_MN","mixedTimesDivideActionTypes","UPDATE_PROBLEM_NUMBER_TIMESDIVIDE","UPDATE_PROBLEM_DIRECTION_TIMESDIVIDE","UPDATE_NUMBER_OF_DIGITS_TIMESDIVIDE","UPDATE_SHEET_NUMBER_TIMESDIVIDE","mixedTimesDivideMNActionTypes","UPDATE_PROBLEM_NUMBER_TIMESDIVIDE_MN","UPDATE_PROBLEM_DIRECTION_TIMESDIVIDE_MN","UPDATE_NUMBER_OF_DIGITS_TIMESDIVIDE_MN","UPDATE_SHEET_NUMBER_TIMESDIVIDE_MN","reducers","combineReducers","console","log","preloadState","createStore","applyMiddleware","thunk","actionTypes"],"mappings":"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","file":"static/js/main.7f8a32d6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bee-705412.469e9fca.svg\";","export enum Direction {\n  HORIZONTAL = \"horizontal\",\n  VERTICAL = \"vertical\",\n}\n","export interface CardDataType {\n    key: string;\n    sign: string[];\n    title: string;\n    subtitle: string[];\n    link: string;\n}\n\nexport const cardData: CardDataType[] = [\n    {\n        key: 'additionCard',\n        sign: ['plus'],\n        title: 'Addition',\n        subtitle: ['12 + 9 = ?', '2 + 8 = ?'],\n        link: '/addition',\n    },\n    {\n        key: 'minusCard',\n        sign: ['minus'],\n        title: 'Minus',\n        subtitle: ['12 - 9 = ?', '8 - 2 = ?'],\n        link: '/minus',\n    },\n    {\n        key: 'mixedAddMinusCard',\n        sign: ['plus', 'minus'],\n        title: 'Mixed Problems',\n        subtitle: ['12 + 9 = ?', '8 - 2 = ?'],\n        link: '/mixed_add_minus',\n    },\n\n    {\n        key: 'mnAdditionCard',\n        sign: ['plus'],\n        title: 'Missing Number',\n        subtitle: ['7 + ? = 15', '? + 3 = 12'],\n        link: '/additionmn',\n    },\n    {\n        key: 'mnMinusCard',\n        sign: ['minus'],\n        title: 'Missing Number',\n        subtitle: ['7 - ? = 5', '? - 3 = 12'],\n        link: '/minusmn',\n    },\n    {\n        key: 'mixedAddMinusMNCard',\n        sign: ['plus', 'minus'],\n        title: 'Missing Number',\n        subtitle: ['7 + ? = 15', '8 - ? = 6'],\n        link: '/mixed_add_minus_mn',\n    },\n    {\n        key: 'tnpAdditionCard',\n        sign: ['plus'],\n        title: 'Three Number',\n        subtitle: ['7 + 8 + 12 = ?', '2 + 3 + 4 = ?'],\n        link: 'add_three_numbers',\n    },\n\n    {\n        key: 'tnpAdditionMinusCard',\n        sign: ['plus', 'minus'],\n        title: 'Three Number',\n        subtitle: ['17 - 8 + 7 = ?', '8 + 3 - 4 = ?'],\n        link: '/add_minus_three_numbers',\n    },\n    {\n        key: 'mnThreeNumberAdditionCard',\n        sign: ['plus'],\n        title: 'Missing Number',\n        subtitle: ['7 + ? + 8 = 20', '2 + 3 + ? = 15'],\n        link: 'add_three_numbers_mn',\n    },\n    {\n        key: 'timesCard',\n        sign: ['times'],\n        title: 'Multiplication',\n        subtitle: ['8 * 9 = ?', '2 * 3 = ?'],\n        link: '/multiplication',\n    },\n    {\n        key: 'divisionCard',\n        sign: ['divide'],\n        title: 'Division',\n        subtitle: ['8 / 2 = ?', '12 / 4 = ?'],\n        link: '/division',\n    },\n    {\n        key: 'mixedTimesDivideCard',\n        sign: ['times', 'divide'],\n        title: 'Mixed Problems',\n        subtitle: ['8 * 9 = ?', '12 / 4 = ?'],\n        link: '/mixed_times_divide',\n    },\n    {\n        key: 'mnTimesCard',\n        sign: ['times'],\n        title: 'Missing Number',\n        subtitle: ['8 * ? = 72', '2 * ? = 6'],\n        link: '/multiplicationmn',\n    },\n    {\n        key: 'mnDivisionCard',\n        sign: ['divide'],\n        title: 'Missing Number',\n        subtitle: ['8 / ? = 2', '? / 4 = 3'],\n        link: '/division_mn',\n    },\n    {\n        key: 'mixedTimesDivideMNCard',\n        sign: ['times', 'divide'],\n        title: 'Missing Number',\n        subtitle: ['8 * ? = 72', '? / 4 = 3'],\n        link: '/mixed_times_divide_mn',\n    },\n    {\n        key: 'comparisionCard',\n        sign: ['greaterThan', 'lessThan'],\n        title: 'Comparision',\n        subtitle: ['7 > 8 or 7 < 8 ?', '12 > 2 or 12 < 2 ?'],\n        link: '/greater_than_less_than',\n    },\n];\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlus,\n  faMinus,\n  faGreaterThan,\n  faLessThan,\n  faTimes,\n  faDivide\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./Card.scss\";\n\nconst getSignIcon = (sign:string) => {\n  switch (sign) {\n    case \"plus\":\n      return faPlus;\n    case \"minus\":\n      return faMinus;\n    case \"times\":\n      return faTimes;\n    case \"divide\":\n      return faDivide;\n    case \"greaterThan\":\n      return faGreaterThan;\n    case \"lessThan\":\n      return faLessThan;\n    default:\n      return faPlus;\n  }\n};\n\ninterface CardProps {\n  key: string;\n  sign: string[];\n  title:string;\n  subtitle: string[];\n  onClick: (event: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst Card: React.FC<CardProps> = ({ key, sign, title, subtitle, onClick }:CardProps) => {\n  return (\n    <div className=\"bm-card\">\n      <div className=\"bm-sign-area position-absolute d-flex justify-content-center align-items-center\">\n        {sign.map((item, idx) => (\n          <FontAwesomeIcon\n            className=\"mr-3\"\n            key={`${key}_sign_${idx}`}\n            icon={getSignIcon(item)}\n            size=\"2x\"\n          />\n        ))}\n      </div>\n      <div className=\"bm-des-area position-absolute d-flex justify-content-center align-items-center\">\n        <div className=\"flex-column\">\n          <div className=\"bm-des-title d-flex justify-content-center\">\n            {title}\n          </div>\n          {subtitle.map((item, idx) => (\n            <div\n              key={`${key}_subtitle_${idx}`}\n              className=\"d-flex justify-content-center\"\n            >\n              {item}\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"bm-but-area position-absolute d-flex justify-content-center align-items-center\">\n        <button className=\"bm-card-btn\" onClick={onClick}>\n          Generate\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import Card from './Card';\nexport default Card;","import Card from './Card';\nexport default Card;","import React from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport Card from '../../components/Card';\nimport { CardDataType } from '../../constants/cardData';\nimport { History } from 'history';\n\ninterface CardContainerProps extends CardDataType, RouteComponentProps {\n    history: History;\n}\n\nconst CardContainer: React.FC<CardContainerProps> = (props: CardContainerProps) => {\n    const handleClick = () => {\n        const { link, history } = props;\n        history.push(link);\n    };\n    return <Card {...props} onClick={handleClick} />;\n};\n\nexport default withRouter(CardContainer);\n","import HomePage from './HomePage';\nexport default HomePage;","import React from \"react\";\nimport \"./HomePage.scss\";\nimport bee from \"../../img/bee-705412.svg\";\nimport { cardData } from \"../../constants/cardData\";\nimport Card from \"../Card\";\n\nconst HomePage:React.FC = () => {\n  return (\n    <>\n      <div className=\"position-relative bm-bee-container\">\n        <img src={bee} alt=\"bee\" />\n      </div>\n      <div className=\"bm-bullet-container\">\n        <ul>\n          <div className=\"d-md-none d-lg-block\">\n            <li className=\"bm-text-24\">Printable in PDF format</li>\n          </div>\n          <div className=\"d-none d-md-block d-lg-none\">\n            <li className=\"bm-text-24\">Printable</li>\n          </div>\n          <li className=\"bm-text-24\">100% free</li>\n          <li className=\"bm-text-24\">Open source</li>\n        </ul>\n      </div>\n\n      <div className=\"mt-5 row row-cols-1 row-cols-sm-2 row-cols-md-3\">\n        {cardData.map(item => (\n          <div\n            key={item.key}\n            className=\"col d-flex justify-content-center bm-card-container\"\n          >\n            <Card\n              key={item.key}\n              sign={item.sign}\n              title={item.title}\n              subtitle={item.subtitle}\n              link={item.link}\n            />\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default HomePage;\n","import React from \"react\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\n\ninterface ProblemType {\n  value: string;\n  label: string;\n  key: string;\n}\n\nconst problems: ProblemType[] = [\n  { value: \"10\", label: \"10 problems\", key: \"problem_10\" },\n  { value: \"20\", label: \"20 problems\", key: \"problem_20\" },\n  { value: \"30\", label: \"30 problems\", key: \"problem_30\" },\n  { value: \"50\", label: \"50 problems\", key: \"problem_50\" }\n];\n\ninterface ProblemNumberComponentProps {\n  problemValue:string;\n  onProblemNumberChange:(event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst ProblemNumberComponent:React.FC<ProblemNumberComponentProps> = ({ problemValue, onProblemNumberChange }:ProblemNumberComponentProps) => {\n  return (\n    <FormControl component=\"fieldset\" className=\"sub-form-control\">\n      <FormLabel component=\"legend\">Number of Problems</FormLabel>\n      <RadioGroup\n        row\n        aria-label=\"number of problems\"\n        name=\"number of problems\"\n        value={problemValue}\n        onChange={onProblemNumberChange}\n      >\n        {problems.map(item => (\n          <FormControlLabel\n            key={item.key}\n            value={item.value}\n            control={<Radio color=\"primary\" />}\n            label={item.label}\n            className=\"sub-form-control-label\"\n          />\n        ))}\n      </RadioGroup>\n    </FormControl>\n  );\n};\n\nexport default ProblemNumberComponent;\n","import ProblemNumber from './ProblemNumber';\nexport default ProblemNumber;\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        menuPaper: {\n            maxHeight: 200,\n        },\n    }),\n);\n\nconst pages: number[] = Array.from(Array(50), (_, i) => i + 1);\n\ninterface SheetSelectProps {\n    sheetValue: number;\n    onValueChange: (event: React.ChangeEvent<{ value: unknown }>) => void;\n}\nconst SheetSelect: React.FC<SheetSelectProps> = ({ sheetValue, onValueChange }: SheetSelectProps) => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    return (\n        <FormControl>\n            <FormLabel component=\"legend\">Number of Sheets</FormLabel>\n            <Select\n                labelId=\"controlled-open-select-label\"\n                id=\"controlled-open-select\"\n                open={open}\n                onClose={handleClose}\n                onOpen={handleOpen}\n                value={sheetValue}\n                onChange={onValueChange}\n                MenuProps={{ classes: { paper: classes.menuPaper } }}\n            >\n                {pages.map((item) => (\n                    <MenuItem key={`mi_${item}`} value={item}>\n                        {item}\n                    </MenuItem>\n                ))}\n            </Select>\n        </FormControl>\n    );\n};\n\nexport default SheetSelect;\n","import SheetSelect from './SheetSelect';\nexport default SheetSelect;","import React from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\ninterface OptionType {\n    value: string;\n    label: string;\n    key: string;\n}\n\nconst options: OptionType[] = [\n    { value: '1d', label: '1 digit', key: 'digit_1' },\n    { value: '2d', label: '2 digit', key: 'digit_2' },\n    { value: '3d', label: '3 digit', key: 'digit_3' },\n    { value: 'l20', label: 'number less than 20', key: 'digit_l20' },\n];\n\ninterface NumberOfDigitsProps {\n    digitValue: string;\n    onDigitChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst NumberOfDigits: React.FC<NumberOfDigitsProps> = ({ digitValue, onDigitChange }: NumberOfDigitsProps) => {\n    return (\n        <div className=\"mt-4\">\n            <FormControl component=\"fieldset\" className=\"sub-form-control\">\n                <FormLabel component=\"legend\">Number of Digits</FormLabel>\n                <RadioGroup\n                    row\n                    aria-label=\"number of digits\"\n                    name=\"number of digits\"\n                    value={digitValue}\n                    onChange={onDigitChange}\n                >\n                    {options.map((item) => (\n                        <FormControlLabel\n                            key={item.key}\n                            value={item.value}\n                            control={<Radio color=\"primary\" />}\n                            label={item.label}\n                            className=\"sub-form-control-label\"\n                        />\n                    ))}\n                </RadioGroup>\n            </FormControl>\n        </div>\n    );\n};\n\nexport default NumberOfDigits;\n","import NumberOfDigits from './NumberOfDigits';\nexport default NumberOfDigits;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ProblemNumber from '../../components/ProblemNumber';\nimport SheetSelect from '../../components/SheetSelect';\nimport { updateProblemNumber, updateNumberOfDigits, updateSheetNumber } from '../../actions/greaterThanLessThanActions';\nimport { typedAction } from '../../actions/types';\nimport { ApplicationState } from '../../reducers';\nimport NumberOfDigits from '../../components/NumberOfDigits';\nimport Button from '@material-ui/core/Button';\nimport { generateData } from '../../utils/greaterThanLessThanGenerator';\nimport axios from 'axios';\nimport config from '../../config.json';\n\ninterface GreatThanLessThanPageProps {\n    updateProblemNumber: (value: string) => typedAction;\n    updateNumberOfDigits: (value: string) => typedAction;\n    problemValue: string;\n    digitValue: string;\n    sheetNumber: number;\n    updateSheetNumber: (value: number) => typedAction;\n}\n\nconst GreatThanLessThanPage: React.FC<GreatThanLessThanPageProps> = ({\n    updateProblemNumber,\n    updateNumberOfDigits,\n    problemValue,\n    digitValue,\n    sheetNumber,\n    updateSheetNumber,\n}: GreatThanLessThanPageProps) => {\n    const handleProblemNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateProblemNumber(event.target.value);\n    };\n\n    const handleDigitValueChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateNumberOfDigits(event.target.value);\n    };\n\n    const handleSheetNumberChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        updateSheetNumber(event.target.value as number);\n    };\n\n    const handleClickCreate = () => {\n        const generateProblems = (all: string[]) => {\n            const problems = generateData(digitValue, parseInt(problemValue, 10));\n            all = [...all, ...problems];\n            return all;\n        };\n        const allProblems: string[] = Array.from(Array(sheetNumber).keys()).reduce(generateProblems, []);\n\n        axios\n            .post(config.PDFGeneratorEndpoint, {\n                equations: allProblems,\n                countPerPage: parseInt(problemValue, 10),\n            })\n            .then((resp) => {\n                window.open(resp.data);\n            });\n    };\n\n    return (\n        <>\n            <div className=\"mt-5\">\n                <ProblemNumber problemValue={problemValue} onProblemNumberChange={handleProblemNumberChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                <NumberOfDigits digitValue={digitValue} onDigitChange={handleDigitValueChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                <SheetSelect sheetValue={sheetNumber} onValueChange={handleSheetNumberChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                {' '}\n                <Button variant=\"contained\" color=\"primary\" onClick={handleClickCreate}>\n                    Create\n                </Button>\n            </div>\n        </>\n    );\n};\n\nconst mapStateToProps = (state: ApplicationState) => ({\n    problemValue: state.greaterThanLessThanData.problemNumber,\n    digitValue: state.greaterThanLessThanData.digitNumber,\n    sheetNumber: state.addThreeNumbersData.sheetNumber,\n});\n\nconst mapDispatchToProps = {\n    updateProblemNumber,\n    updateNumberOfDigits,\n    updateSheetNumber,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GreatThanLessThanPage);\n","import GreatThanLessThanPage from './GreaterThanLessThan';\nexport default GreatThanLessThanPage;","// return an array [\"5o10\", \"\"]\n\nexport const generateData = (digitValue: string, count: number): string[] => {\n  const result = [];\n  let range = 10;\n\n  switch (digitValue) {\n    case \"1d\":\n      range = 10;\n      break;\n    case \"2d\":\n      range = 100;\n      break;\n    case \"3d\":\n      range = 1000;\n      break;\n    case \"l20\":\n      range = 20;\n      break;\n    default:\n      break;\n  }\n\n  const set = new Set();\n\n  let c = 0;\n\n  while (c < count) {\n    const a1 = Math.floor(Math.random() * range);\n    const a2 = Math.floor(Math.random() * range);\n\n    const hash = `${a1},${a2}`;\n\n    if (!set.has(hash)) {\n      set.add(hash);\n      result.push(`${a1}o${a2}`);\n      c++;\n    }\n  }\n\n  return result;\n};\n","// min, max included\nexport const getRandomIntFromInterval = (min: number, max: number): number => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nexport const isSmallAddendLessThan10 = (item: Array<number | string>, sign: string): boolean => {\n    if (item[2] === 'x' && sign === '+') {\n        // 2 +5 = x\n        return Math.min(item[0] as number, item[1] as number) < 10;\n    } else if (item[0] === 'x' && sign === '-') {\n        // x - 3 = 5\n        return Math.min(item[1] as number, item[2] as number) < 10;\n    }\n\n    return true;\n};\n\nexport const isSubtrahendLessThan10 = (item: Array<number | string>, sign: string): boolean => {\n    if (item[0] === 'x' && sign === '+') {\n        // x +3 = 8\n        return item[1] < 10;\n    } else if (item[1] === 'x' && sign === '+') {\n        // 3 +x + 8\n        return item[0] < 10;\n    } else if (item[1] === 'x' && sign === '-') {\n        // 8 - x = 3\n        return item[2] < 10;\n    } else if (item[2] === 'x' && sign === '-') {\n        // 8 - 5 = x\n        return item[1] < 10;\n    }\n\n    return true;\n};\n\nexport const generateWithTemplate = (arr: Array<Array<number | string>>, sign: string): string[] => {\n    const result = arr.map((item) => {\n        return `${item[0]}${sign}${item[1]}=${item[2]}`;\n    });\n\n    return result;\n};\n\nexport const generateThreeNumberTemplate = (arr: Array<Array<number | string>>, sign: string): string[] => {\n    const result = arr.map((item) => {\n        return `${item[0]}${sign}${item[1]}${sign}${item[2]}=${item[3]}`;\n    });\n\n    return result;\n};\n","import {\n  getRandomIntFromInterval,\n  generateThreeNumberTemplate,\n} from \"./common\";\n\nconst generateThreeNumbersArray = (\n  digitValue: string,\n  count: number\n): Array<Array<number | string>> => {\n  const result = [];\n  let range = 10;\n\n  switch (digitValue) {\n    case \"1d\":\n      range = 10;\n      break;\n    case \"2d\":\n      range = 100;\n      break;\n    case \"3d\":\n      range = 1000;\n      break;\n    case \"l20\":\n      range = 10;\n      break;\n    default:\n      break;\n  }\n\n  const set = new Set();\n\n  let c = 0;\n\n  while (c < count) {\n    const a1 = getRandomIntFromInterval(1, range - 1);\n    const a2 = getRandomIntFromInterval(1, range - 1);\n    const a3 = getRandomIntFromInterval(1, range - 1);\n\n    if (digitValue === \"l20\" && a1 + a2 + a3 > 20) {\n      continue;\n    }\n    const hash = `${a1},${a2},${a3}`;\n\n    if (!set.has(hash)) {\n      const item = [a1, a2, a3, \"x\"];\n      set.add(hash);\n      result.push(item);\n      c++;\n    }\n  }\n\n  return result;\n};\n\nexport const generateThreeNumbers = (\n  digitValue: string,\n  count: number\n): string[] => {\n  const arr = generateThreeNumbersArray(digitValue, count);\n\n  return generateThreeNumberTemplate(arr, \"+\");\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ProblemNumber from '../../components/ProblemNumber';\nimport SheetSelect from '../../components/SheetSelect';\nimport { updateProblemNumber, updateNumberOfDigits, updateSheetNumber } from '../../actions/addThreeNumbersActions';\nimport { typedAction } from '../../actions/types';\nimport { ApplicationState } from '../../reducers';\nimport NumberOfDigits from '../../components/NumberOfDigits';\nimport Button from '@material-ui/core/Button';\nimport { generateThreeNumbers } from '../../utils/addThreeNumbersGenerator';\nimport axios from 'axios';\nimport config from '../../config.json';\n\ninterface AddThreeNumbersPageProps {\n    updateProblemNumber: (value: string) => typedAction;\n    updateNumberOfDigits: (value: string) => typedAction;\n    problemValue: string;\n    digitValue: string;\n    sheetNumber: number;\n    updateSheetNumber: (value: number) => typedAction;\n}\n\nconst AddThreeNumbersPage: React.FC<AddThreeNumbersPageProps> = ({\n    updateProblemNumber,\n    updateNumberOfDigits,\n    problemValue,\n    digitValue,\n    sheetNumber,\n    updateSheetNumber,\n}: AddThreeNumbersPageProps) => {\n    const handleProblemNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateProblemNumber(event.target.value);\n    };\n\n    const handleDigitValueChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateNumberOfDigits(event.target.value);\n    };\n\n    const handleSheetNumberChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        updateSheetNumber(event.target.value as number);\n    };\n\n    const handleClickCreate = () => {\n        const generateProblems = (all: string[]) => {\n            const problems = generateThreeNumbers(digitValue, parseInt(problemValue, 10));\n            all = [...all, ...problems];\n            return all;\n        };\n        const allProblems: string[] = Array.from(Array(sheetNumber).keys()).reduce(generateProblems, []);\n\n        axios\n            .post(config.PDFGeneratorEndpoint, {\n                equations: allProblems,\n                template: '3num',\n                countPerPage: parseInt(problemValue, 10),\n            })\n            .then((resp) => {\n                window.open(resp.data);\n            });\n    };\n\n    return (\n        <>\n            <div className=\"mt-5\">\n                <ProblemNumber problemValue={problemValue} onProblemNumberChange={handleProblemNumberChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                <NumberOfDigits digitValue={digitValue} onDigitChange={handleDigitValueChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                <SheetSelect sheetValue={sheetNumber} onValueChange={handleSheetNumberChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                {' '}\n                <Button variant=\"contained\" color=\"primary\" onClick={handleClickCreate}>\n                    Create\n                </Button>\n            </div>\n        </>\n    );\n};\n\nconst mapStateToProps = (state: ApplicationState) => ({\n    problemValue: state.addThreeNumbersData.problemNumber,\n    digitValue: state.addThreeNumbersData.digitNumber,\n    sheetNumber: state.addThreeNumbersData.sheetNumber,\n});\n\nconst mapDispatchToProps = {\n    updateProblemNumber,\n    updateNumberOfDigits,\n    updateSheetNumber,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddThreeNumbersPage);\n","import { getRandomIntFromInterval } from \"./common\";\n\nconst generateThreeNumbersArray = (\n  digitValue: string,\n  count: number\n): string[] => {\n  const result = [];\n  let range = 10;\n\n  switch (digitValue) {\n    case \"1d\":\n      range = 10;\n      break;\n    case \"2d\":\n      range = 100;\n      break;\n    case \"3d\":\n      range = 1000;\n      break;\n    case \"l20\":\n      range = 10;\n      break;\n    default:\n      break;\n  }\n\n  const set = new Set();\n\n  let c = 0;\n\n  while (c < count) {\n    const a1 = getRandomIntFromInterval(1, range - 1);\n    const a2 = getRandomIntFromInterval(1, range - 1);\n    const a3 = getRandomIntFromInterval(1, range - 1);\n\n    const signV = getRandomIntFromInterval(0, 1);\n    if (signV === 0 && a1 + a2 - a3 < 0) {\n      continue;\n    }\n\n    if (signV === 1 && (a1 - a2 + a3 < 0 || a1 - a2 < 0)) {\n      continue;\n    }\n\n    if (digitValue === \"l20\") {\n      if (signV === 0) {\n        if (a1 + a2 - a3 > 20) {\n          continue;\n        }\n      } else {\n        if (a1 - a2 + a3 > 20) {\n          continue;\n        }\n      }\n    }\n    let hash = \"\";\n    if (signV === 0) {\n      hash = `${a1}+${a2}-${a3}=x`;\n    } else {\n      hash = `${a1}-${a2}+${a3}=x`;\n    }\n\n    if (!set.has(hash)) {\n      set.add(hash);\n      result.push(hash);\n      c++;\n    }\n  }\n\n  return result;\n};\n\nexport const generateThreeNumbers = (\n  digitValue: string,\n  count: number\n): string[] => {\n  const arr = generateThreeNumbersArray(digitValue, count);\n\n  return arr;\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ProblemNumber from '../../components/ProblemNumber';\nimport SheetSelect from '../../components/SheetSelect';\nimport {\n    updateProblemNumber,\n    updateNumberOfDigits,\n    updateSheetNumber,\n} from '../../actions/addMinusThreeNumbersActions';\nimport { typedAction } from '../../actions/types';\nimport { ApplicationState } from '../../reducers';\nimport NumberOfDigits from '../../components/NumberOfDigits';\nimport Button from '@material-ui/core/Button';\nimport { generateThreeNumbers } from '../../utils/addMinusThreeNumbersGenerator';\nimport axios from 'axios';\nimport config from '../../config.json';\n\ninterface AddMinusThreeNumbersPageProps {\n    updateProblemNumber: (value: string) => typedAction;\n    updateNumberOfDigits: (value: string) => typedAction;\n    problemValue: string;\n    digitValue: string;\n    sheetNumber: number;\n    updateSheetNumber: (value: number) => typedAction;\n}\n\nconst AddMinusThreeNumbersPage: React.FC<AddMinusThreeNumbersPageProps> = ({\n    updateProblemNumber,\n    updateNumberOfDigits,\n    problemValue,\n    digitValue,\n    sheetNumber,\n    updateSheetNumber,\n}: AddMinusThreeNumbersPageProps) => {\n    const handleProblemNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateProblemNumber(event.target.value);\n    };\n\n    const handleDigitValueChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateNumberOfDigits(event.target.value);\n    };\n\n    const handleSheetNumberChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        updateSheetNumber(event.target.value as number);\n    };\n\n    const handleClickCreate = () => {\n        const generateProblems = (all: string[]) => {\n            const problems = generateThreeNumbers(digitValue, parseInt(problemValue, 10));\n            all = [...all, ...problems];\n            return all;\n        };\n        const allProblems: string[] = Array.from(Array(sheetNumber).keys()).reduce(generateProblems, []);\n\n        axios\n            .post(config.PDFGeneratorEndpoint, {\n                equations: allProblems,\n                template: '3num',\n                countPerPage: parseInt(problemValue, 10),\n            })\n            .then((resp) => {\n                window.open(resp.data);\n            });\n    };\n\n    return (\n        <>\n            <div className=\"mt-5\">\n                <ProblemNumber problemValue={problemValue} onProblemNumberChange={handleProblemNumberChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                <NumberOfDigits digitValue={digitValue} onDigitChange={handleDigitValueChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                <SheetSelect sheetValue={sheetNumber} onValueChange={handleSheetNumberChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                {' '}\n                <Button variant=\"contained\" color=\"primary\" onClick={handleClickCreate}>\n                    Create\n                </Button>\n            </div>\n        </>\n    );\n};\nconst mapStateToProps = (state: ApplicationState) => ({\n    problemValue: state.addMinusThreeNumbersData.problemNumber,\n    digitValue: state.addMinusThreeNumbersData.digitNumber,\n    sheetNumber: state.addMinusThreeNumbersData.sheetNumber,\n});\n\nconst mapDispatchToProps = {\n    updateProblemNumber,\n    updateNumberOfDigits,\n    updateSheetNumber,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddMinusThreeNumbersPage);\n","import AddMinusThreeNumbersPage from './AddMinusThreeNumbers';\nexport default AddMinusThreeNumbersPage;\n","import { getRandomIntFromInterval } from \"./common\";\n\nconst generateMultiplicationArray = (\n  digitValue: string,\n  count: number\n): Array<Array<number | string>> => {\n  const result = [];\n  let range = 10;\n\n  switch (digitValue) {\n    case \"1d\":\n      range = 10;\n      break;\n    case \"2d\":\n      range = 100;\n      break;\n    case \"3d\":\n      range = 1000;\n      break;\n    case \"l20\":\n      range = 20;\n      break;\n    default:\n      break;\n  }\n\n  const set = new Set();\n\n  let c = 0;\n\n  while (c < count) {\n    const a1 = getRandomIntFromInterval(1, range - 1);\n    const a2 = getRandomIntFromInterval(1, range - 1);\n\n    const hash = `${a1},${a2}`;\n\n    if (!set.has(hash)) {\n      const item = [a1, a2, \"x\"];\n      set.add(hash);\n      result.push(item);\n      c++;\n    }\n  }\n\n  return result;\n};\n\nexport const generateMultiplication = (\n  digitValue: string,\n  count: number\n): string[] => {\n  const arr = generateMultiplicationArray(digitValue, count);\n\n  return arr.map((item) => {\n    return `${item[0]}*${item[1]}=${item[2]}`;\n  });\n};\n","import React from \"react\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { Direction } from \"../../constants/directions\";\n\ninterface DirType {\n  value: Direction;\n  label: Direction;\n  key:string;\n}\n\nconst dirs:DirType[] = [\n  {\n    value: Direction.HORIZONTAL,\n    label: Direction.HORIZONTAL,\n    key: `direction_${Direction.HORIZONTAL}`\n  },\n  {\n    value: Direction.VERTICAL,\n    label: Direction.VERTICAL,\n    key: `direction_${Direction.VERTICAL}`\n  }\n];\n\ninterface ProblemDirectionProps {\n  problemDirection: Direction;\n  onDirectionchange:(event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst ProblemDirection:React.FC<ProblemDirectionProps> = ({ problemDirection, onDirectionchange }:ProblemDirectionProps) => {\n  return (\n    <FormControl component=\"fieldset\" className=\"sub-form-control\">\n      <FormLabel component=\"legend\">Direction of Problems</FormLabel>\n      <RadioGroup\n        row\n        aria-label=\"direction of problems\"\n        name=\"direction of problems\"\n        value={problemDirection}\n        onChange={onDirectionchange}\n      >\n        {dirs.map(item => (\n          <FormControlLabel\n            key={item.key}\n            value={item.value}\n            control={<Radio color=\"primary\" />}\n            label={item.label}\n            className=\"sub-form-control-label\"\n          />\n        ))}\n      </RadioGroup>\n    </FormControl>\n  );\n};\n\nexport default ProblemDirection;\n","import ProblemDirection from './ProblemDirection';\nexport default ProblemDirection;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ProblemNumber from '../../components/ProblemNumber';\nimport SheetSelect from '../../components/SheetSelect';\nimport {\n    updateProblemNumber,\n    updateNumberOfDigits,\n    updateProblemDirection,\n    updateSheetNumber,\n} from '../../actions/multiplicationActions';\nimport { typedAction } from '../../actions/types';\nimport { ApplicationState } from '../../reducers';\nimport { Direction } from '../../constants/directions';\nimport NumberOfDigits from '../../components/NumberOfDigits';\nimport Button from '@material-ui/core/Button';\nimport { generateMultiplication } from '../../utils/multiplicationGenerator';\nimport ProblemDirection from '../../components/ProblemDirection';\nimport axios from 'axios';\nimport config from '../../config.json';\n\ninterface MultiplicationPageProps {\n    problemValue: string;\n    problemDirection: Direction;\n    digitValue: string;\n    updateProblemNumber: (value: string) => typedAction;\n    updateProblemDirection: (value: Direction) => typedAction;\n    updateNumberOfDigits: (value: string) => typedAction;\n    sheetNumber: number;\n    updateSheetNumber: (value: number) => typedAction;\n}\n\nconst MultiplicationPage: React.FC<MultiplicationPageProps> = ({\n    problemValue,\n    problemDirection,\n    digitValue,\n    updateProblemNumber,\n    updateProblemDirection,\n    updateNumberOfDigits,\n    sheetNumber,\n    updateSheetNumber,\n}: MultiplicationPageProps) => {\n    const handleProblemNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateProblemNumber(event.target.value);\n    };\n\n    const handleDigitValueChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateNumberOfDigits(event.target.value);\n    };\n\n    const handleProblemDirectionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateProblemDirection(event.target.value as Direction);\n    };\n\n    const handleSheetNumberChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        updateSheetNumber(event.target.value as number);\n    };\n\n    const handleClickCreate = () => {\n        const generateProblems = (all: string[]) => {\n            const problems = generateMultiplication(digitValue, parseInt(problemValue, 10));\n            all = [...all, ...problems];\n            return all;\n        };\n        const allProblems: string[] = Array.from(Array(sheetNumber).keys()).reduce(generateProblems, []);\n\n        axios\n            .post(config.PDFGeneratorEndpoint, {\n                equations: allProblems,\n                template: problemDirection,\n                countPerPage: parseInt(problemValue, 10),\n            })\n            .then((resp) => {\n                window.open(resp.data);\n            });\n    };\n\n    return (\n        <>\n            <div className=\"mt-5\">\n                <ProblemNumber problemValue={problemValue} onProblemNumberChange={handleProblemNumberChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                <NumberOfDigits digitValue={digitValue} onDigitChange={handleDigitValueChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                <ProblemDirection\n                    problemDirection={problemDirection}\n                    onDirectionchange={handleProblemDirectionChange}\n                />\n            </div>\n\n            <div className=\"mt-4\">\n                <SheetSelect sheetValue={sheetNumber} onValueChange={handleSheetNumberChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                {' '}\n                <Button variant=\"contained\" color=\"primary\" onClick={handleClickCreate}>\n                    Create\n                </Button>\n            </div>\n        </>\n    );\n};\n\nconst mapStateToProps = (state: ApplicationState) => ({\n    problemValue: state.multiplicationData.problemNumber,\n    problemDirection: state.multiplicationData.problemDirection!,\n    digitValue: state.multiplicationData.digitNumber,\n    sheetNumber: state.multiplicationData.sheetNumber,\n});\n\nconst mapDispatchToProps = {\n    updateProblemNumber,\n    updateNumberOfDigits,\n    updateProblemDirection,\n    updateSheetNumber,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MultiplicationPage);\n","import MultiplicationPage from './Multiplication';\nexport default MultiplicationPage;","import { getRandomIntFromInterval } from \"./common\";\n\nconst generateMultiplicationArray = (\n  digitValue: string,\n  count: number\n): Array<Array<number | string>> => {\n  const result = [];\n  let range = 10;\n\n  switch (digitValue) {\n    case \"1d\":\n      range = 10;\n      break;\n    case \"2d\":\n      range = 100;\n      break;\n    case \"3d\":\n      range = 1000;\n      break;\n    case \"l20\":\n      range = 20;\n      break;\n    default:\n      break;\n  }\n\n  const set = new Set();\n\n  let c = 0;\n\n  while (c < count) {\n    const a1 = getRandomIntFromInterval(1, range - 1);\n    const a2 = getRandomIntFromInterval(1, range - 1);\n\n    const p = getRandomIntFromInterval(0, 2);\n    let hash = \"\";\n    let item: Array<number | string> = [];\n    switch (p) {\n      case 0:\n        hash = `x,${a2},${a1 * a2}`;\n        item = [\"x\", a1, a1 * a2];\n        break;\n      case 1:\n        hash = `${a1},x,${a1 * a2}`;\n        item = [a1, \"x\", a1 * a2];\n        break;\n      case 2:\n        hash = `${a1},${a2},x`;\n        item = [a1, a2, \"x\"];\n        break;\n      default:\n        break;\n    }\n\n    if (!set.has(hash)) {\n      set.add(hash);\n      result.push(item);\n      c++;\n    }\n  }\n\n  return result;\n};\n\nexport const generateMultiplicationMN = (\n  digitValue: string,\n  count: number\n): string[] => {\n  const arr = generateMultiplicationArray(digitValue, count);\n\n  return arr.map((item) => {\n    return `${item[0]}*${item[1]}=${item[2]}`;\n  });\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ProblemNumber from '../../components/ProblemNumber';\nimport SheetSelect from '../../components/SheetSelect';\nimport { updateProblemNumber, updateNumberOfDigits, updateSheetNumber } from '../../actions/multiplicationMNActions';\nimport { typedAction } from '../../actions/types';\nimport { ApplicationState } from '../../reducers';\nimport { Direction } from '../../constants/directions';\nimport NumberOfDigits from '../../components/NumberOfDigits';\nimport Button from '@material-ui/core/Button';\nimport { generateMultiplicationMN } from '../../utils/multiplicationMNGenerator';\nimport axios from 'axios';\nimport config from '../../config.json';\n\ninterface MultiplicationMNPageProps {\n    problemValue: string;\n    problemDirection: Direction;\n    digitValue: string;\n    updateProblemNumber: (value: string) => typedAction;\n    updateNumberOfDigits: (value: string) => typedAction;\n    sheetNumber: number;\n    updateSheetNumber: (value: number) => typedAction;\n}\n\nconst MultiplicationMNPage: React.FC<MultiplicationMNPageProps> = ({\n    problemValue,\n    problemDirection,\n    digitValue,\n    updateProblemNumber,\n    updateNumberOfDigits,\n    sheetNumber,\n    updateSheetNumber,\n}: MultiplicationMNPageProps) => {\n    const handleProblemNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateProblemNumber(event.target.value);\n    };\n\n    const handleDigitValueChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateNumberOfDigits(event.target.value);\n    };\n\n    const handleSheetNumberChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        updateSheetNumber(event.target.value as number);\n    };\n\n    const handleClickCreate = () => {\n        const generateProblems = (all: string[]) => {\n            const problems = generateMultiplicationMN(digitValue, parseInt(problemValue, 10));\n            all = [...all, ...problems];\n            return all;\n        };\n        const allProblems: string[] = Array.from(Array(sheetNumber).keys()).reduce(generateProblems, []);\n        axios\n            .post(config.PDFGeneratorEndpoint, {\n                equations: allProblems,\n                template: problemDirection,\n                countPerPage: parseInt(problemValue, 10),\n            })\n            .then((resp) => {\n                window.open(resp.data);\n            });\n    };\n\n    return (\n        <>\n            <div className=\"mt-5\">\n                <ProblemNumber problemValue={problemValue} onProblemNumberChange={handleProblemNumberChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                <NumberOfDigits digitValue={digitValue} onDigitChange={handleDigitValueChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                <SheetSelect sheetValue={sheetNumber} onValueChange={handleSheetNumberChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                {' '}\n                <Button variant=\"contained\" color=\"primary\" onClick={handleClickCreate}>\n                    Create\n                </Button>\n            </div>\n        </>\n    );\n};\n\nconst mapStateToProps = (state: ApplicationState) => ({\n    problemValue: state.multiplicationMNData.problemNumber,\n    problemDirection: state.multiplicationMNData.problemDirection!,\n    digitValue: state.multiplicationMNData.digitNumber,\n    sheetNumber: state.multiplicationMNData.sheetNumber,\n});\n\nconst mapDispatchToProps = {\n    updateProblemNumber,\n    updateNumberOfDigits,\n    updateSheetNumber,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MultiplicationMNPage);\n","import MultiplicationMNPage from './MultiplicationMissingNumber';\nexport default MultiplicationMNPage;","import React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport TextField from \"@material-ui/core/TextField\";\n\n\ninterface NumberRangeProps{\n  lower:number;\n  upper:number;\n  onFromChange:(event: React.ChangeEvent<HTMLInputElement>) => void;\n  onToChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  fromValue:string;\n  toValue:string;\n  isFromValueError: boolean;\n  isToValueError:boolean;\n}\n\nconst NumberRange: React.FC<NumberRangeProps> = ({\n  lower,\n  upper,\n  onFromChange,\n  onToChange,\n  fromValue,\n  toValue,\n  isFromValueError,\n  isToValueError\n}:NumberRangeProps) => {\n  const defaultHelperText = `${lower} <= number <= ${upper}`;\n\n  const getFromHelperText = () =>\n    isFromValueError ? \"invalid entry\" : defaultHelperText;\n\n  const getToHelperText = () =>\n    isToValueError ? \"invalid entry\" : defaultHelperText;\n\n  return (\n    <div className=\"mt-5\">\n      <FormControl component=\"fieldset\" className=\"sub-form-control\">\n        <FormLabel component=\"legend\">Range of number</FormLabel>\n        <div className=\"pt-3 d-flex flex-row\">\n          <div className=\"mr-3\">\n            <TextField\n              id=\"outlined-number\"\n              label=\"From\"\n              type=\"number\"\n              error={isFromValueError}\n              InputLabelProps={{\n                shrink: true\n              }}\n              variant=\"outlined\"\n              helperText={getFromHelperText()}\n              onChange={onFromChange}\n              value={fromValue}\n            />\n          </div>\n          <div>\n            <TextField\n              id=\"outlined-number\"\n              label=\"To\"\n              type=\"number\"\n              error={isToValueError}\n              InputLabelProps={{\n                shrink: true\n              }}\n              variant=\"outlined\"\n              helperText={getToHelperText()}\n              onChange={onToChange}\n              value={toValue}\n            />\n          </div>\n        </div>\n      </FormControl>\n    </div>\n  );\n};\n\nNumberRange.defaultProps = {\n  lower: 0,\n  upper: 1000,\n  onFromChange: () => {},\n  onToChange: () => {},\n  fromValue: \"0\",\n  toValue: \"20\",\n  isFromValueError: false,\n  isToValueError: false\n};\n\nexport default NumberRange;\n","import NumberRange from './NumberRange';\nexport default NumberRange;","import { getRandomIntFromInterval, isSmallAddendLessThan10, generateWithTemplate } from './common';\nimport * as filters from '../constants/filters';\n\nconst generateAdditionArray = (\n    from: number,\n    to: number,\n    count: number,\n    restrictions: string[],\n): Array<Array<number | string>> => {\n    const result = [];\n    const set = new Set();\n    let dupCnt = 0;\n\n    while (result.length < count) {\n        const a1 = getRandomIntFromInterval(0, to);\n        const a2 = getRandomIntFromInterval(0, to);\n\n        if (a1 + a2 < from || a1 + a2 > to) {\n            continue;\n        }\n\n        const hash = `${a1},${a2}`;\n\n        if (!set.has(hash)) {\n            const item = [a1, a2, 'x'];\n            if (restrictions.includes(filters.SMALL_ADDEND_LESSTHAN_10) && !isSmallAddendLessThan10(item, '+')) {\n                continue;\n            }\n\n            set.add(hash);\n            result.push(item);\n            dupCnt = 0;\n        } else {\n            dupCnt += 1;\n        }\n\n        if (dupCnt === 20) {\n            break;\n        }\n    }\n\n    return result;\n};\n\nexport const generateAddition = (from: number, to: number, count: number, restrictions: string[]): string[] => {\n    const arr = generateAdditionArray(from, to, count, restrictions);\n    return generateWithTemplate(arr, '+');\n};\n","export const SUBTRAHEND_LESSTHAN_10 = \"subtrahend_10\";\n\nexport const SMALL_ADDEND_LESSTHAN_10 = \"addend_10\";\n","import { ApplicationState } from \"../reducers\";\nimport { RangeTemplateState } from \"../reducers/types\";\n\nexport const selectAdditionData = (\n  state: ApplicationState\n): RangeTemplateState => state.additionData;\n\nexport const selectDisableCreateBtn = (state: ApplicationState): boolean => {\n  const { isFromValueError, isToValueError } = selectAdditionData(state);\n\n  return isFromValueError || isToValueError;\n};\n\nexport default { selectAdditionData, selectDisableCreateBtn };\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport NumberRange from '../../components/NumberRange';\nimport {\n    updateProblemNumber,\n    updateProblemDirection,\n    updateFromValue,\n    updateToValue,\n    updateRestrictions,\n    updateSheetNumber,\n} from '../../actions/additionActions';\nimport { typedAction } from '../../actions/types';\nimport { ApplicationState } from '../../reducers';\nimport { LOWER_RANGE, UPPER_RANGE } from '../../constants/ranges';\nimport ProblemNumber from '../../components/ProblemNumber';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport ProblemDirection from '../../components/ProblemDirection';\nimport SheetSelect from '../../components/SheetSelect';\nimport { Direction } from '../../constants/directions';\nimport * as filters from '../../constants/filters';\nimport { generateAddition } from '../../utils/additionGenerator';\nimport { selectDisableCreateBtn } from '../../selectors/additionSelector';\nimport axios from 'axios';\nimport config from '../../config.json';\n\ninterface AdditionPageProps {\n    fromValue: string;\n    toValue: string;\n    updateFromValue: (value: string) => typedAction;\n    updateToValue: (value: string) => typedAction;\n    isFromValueError: boolean;\n    isToValueError: boolean;\n    problemValue: string;\n    problemDirection: Direction;\n    sheetNumber: number;\n    updateProblemNumber: (value: string) => typedAction;\n    updateProblemDirection: (value: Direction) => typedAction;\n    updateRestrictions: (checkboxName: string, value: boolean) => typedAction;\n    updateSheetNumber: (value: number) => typedAction;\n    disableCreateBtn: boolean;\n    restrictionsCheckedArr: string[];\n}\n\nconst AdditionPage: React.FC<AdditionPageProps> = ({\n    fromValue,\n    toValue,\n    updateFromValue,\n    updateToValue,\n    isFromValueError,\n    isToValueError,\n    problemValue,\n    problemDirection,\n    sheetNumber,\n    updateProblemNumber,\n    updateProblemDirection,\n    updateRestrictions,\n    updateSheetNumber,\n    disableCreateBtn,\n    restrictionsCheckedArr,\n}: AdditionPageProps) => {\n    const restrictions = [\n        {\n            key: filters.SMALL_ADDEND_LESSTHAN_10,\n            label: 'Smaller addend less than 10',\n        },\n    ];\n\n    const handleFromChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateFromValue(event.target.value);\n    };\n\n    const handleToChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateToValue(event.target.value);\n    };\n\n    const handleProblemNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateProblemNumber(event.target.value);\n    };\n\n    const handleProblemDirectionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateProblemDirection(event.target.value as Direction);\n    };\n\n    const handleSheetNumberChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        updateSheetNumber(event.target.value as number);\n    };\n\n    const handleClickCreate = () => {\n        const generateProblems = (all: string[]) => {\n            const problems = generateAddition(\n                parseInt(fromValue, 10),\n                parseInt(toValue, 10),\n                parseInt(problemValue, 10),\n                restrictionsCheckedArr,\n            );\n            all = [...all, ...problems];\n            return all;\n        };\n        const allProblems: string[] = Array.from(Array(sheetNumber).keys()).reduce(generateProblems, []);\n\n        axios\n            .post(config.PDFGeneratorEndpoint, {\n                equations: allProblems,\n                template: problemDirection,\n                countPerPage: parseInt(problemValue, 10),\n            })\n            .then((resp) => {\n                window.open(resp.data);\n            });\n    };\n\n    const handleRestrictionsCheckboxChange = (name: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateRestrictions(name, event.target.checked);\n    };\n\n    return (\n        <>\n            <NumberRange\n                lower={LOWER_RANGE}\n                upper={UPPER_RANGE}\n                fromValue={fromValue}\n                toValue={toValue}\n                onFromChange={handleFromChange}\n                onToChange={handleToChange}\n                isFromValueError={isFromValueError}\n                isToValueError={isToValueError}\n            />\n\n            <div className=\"mt-5\">\n                <ProblemNumber problemValue={problemValue} onProblemNumberChange={handleProblemNumberChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                <ProblemDirection\n                    problemDirection={problemDirection}\n                    onDirectionchange={handleProblemDirectionChange}\n                />\n            </div>\n\n            <div className=\"mt-4\">\n                <FormLabel component=\"legend\">Restrictions</FormLabel>\n                <FormGroup>\n                    {restrictions.map((item) => (\n                        <FormControlLabel\n                            key={item.key}\n                            control={\n                                <Checkbox\n                                    checked={restrictionsCheckedArr.includes(item.key)}\n                                    onChange={handleRestrictionsCheckboxChange(item.key)}\n                                    color=\"primary\"\n                                />\n                            }\n                            label={item.label}\n                        />\n                    ))}\n                </FormGroup>\n            </div>\n\n            <div className=\"mt-4\">\n                <SheetSelect sheetValue={sheetNumber} onValueChange={handleSheetNumberChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                {' '}\n                <Button variant=\"contained\" color=\"primary\" disabled={disableCreateBtn} onClick={handleClickCreate}>\n                    Create\n                </Button>\n            </div>\n        </>\n    );\n};\n\nconst mapStateToProps = (state: ApplicationState) => ({\n    problemValue: state.additionData.problemNumber,\n    problemDirection: state.additionData.problemDirection,\n    fromValue: state.additionData.fromValue,\n    toValue: state.additionData.toValue,\n    isFromValueError: state.additionData.isFromValueError,\n    isToValueError: state.additionData.isToValueError,\n    restrictionsCheckedArr: state.additionData.restrictionsChecked,\n    sheetNumber: state.additionData.sheetNumber,\n    disableCreateBtn: selectDisableCreateBtn(state),\n});\n\nconst mapDispatchToProps = {\n    updateProblemNumber,\n    updateProblemDirection,\n    updateFromValue,\n    updateToValue,\n    updateRestrictions,\n    updateSheetNumber,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdditionPage);\n","import AdditionPage from './Addition';\nexport default AdditionPage;","import {\n    getRandomIntFromInterval,\n    isSmallAddendLessThan10,\n    isSubtrahendLessThan10,\n    generateWithTemplate,\n} from './common';\nimport * as filters from '../constants/filters';\n\nconst generateAdditionMNArray = (\n    from: number,\n    to: number,\n    count: number,\n    restrictions: string[],\n): Array<Array<number | string>> => {\n    const result = [];\n    const set = new Set();\n    let dupCnt = 0;\n\n    while (result.length < count) {\n        const a1 = getRandomIntFromInterval(0, to);\n        const a2 = getRandomIntFromInterval(0, to);\n\n        const p = getRandomIntFromInterval(0, 2);\n        let hash = '';\n        let item: Array<number | string> = [];\n\n        switch (p) {\n            case 0:\n                if (a2 - a1 < from) {\n                    break;\n                }\n                item = ['x', a1, a2];\n                if (restrictions.includes(filters.SUBTRAHEND_LESSTHAN_10) && !isSubtrahendLessThan10(item, '+')) {\n                    break;\n                }\n                hash = `'x',${a1},${a2}`;\n                break;\n            case 1:\n                if (a2 - a1 < from) {\n                    break;\n                }\n                item = [a1, 'x', a2];\n                if (restrictions.includes(filters.SUBTRAHEND_LESSTHAN_10) && !isSubtrahendLessThan10(item, '+')) {\n                    break;\n                }\n                hash = `${a1},'x',${a2}`;\n                break;\n            case 2:\n                if (a1 + a2 < from || a1 + a2 > to) {\n                    break;\n                }\n                item = [a1, a2, 'x'];\n                if (restrictions.includes(filters.SMALL_ADDEND_LESSTHAN_10) && !isSmallAddendLessThan10(item, '+')) {\n                    break;\n                }\n                hash = `${a1},${a2},'x`;\n                break;\n            default:\n                break;\n        }\n\n        if (hash) {\n            if (!set.has(hash)) {\n                set.add(hash);\n                result.push(item);\n                dupCnt = 0;\n            } else {\n                dupCnt += 1;\n            }\n        }\n\n        if (dupCnt === 20) {\n            break;\n        }\n    }\n\n    return result;\n};\n\nexport const generateAdditionMN = (from: number, to: number, count: number, restrictions: string[]): string[] => {\n    const arr = generateAdditionMNArray(from, to, count, restrictions);\n    return generateWithTemplate(arr, '+');\n};\n","import { ApplicationState } from \"../reducers\";\nimport { RangeTemplateState } from \"../reducers/types\";\n\nexport const selectAdditionMNData = (\n  state: ApplicationState\n): RangeTemplateState => state.additionMNData;\n\nexport const selectDisableCreateBtn = (state: ApplicationState): boolean => {\n  const { isFromValueError, isToValueError } = selectAdditionMNData(state);\n\n  return isFromValueError || isToValueError;\n};\n\nexport default { selectAdditionMNData, selectDisableCreateBtn };\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport NumberRange from '../../components/NumberRange';\nimport {\n    updateProblemNumber,\n    updateFromValue,\n    updateToValue,\n    updateRestrictions,\n    updateSheetNumber,\n} from '../../actions/additionMNActions';\nimport { typedAction } from '../../actions/types';\nimport { ApplicationState } from '../../reducers';\nimport { Direction } from '../../constants/directions';\nimport { LOWER_RANGE, UPPER_RANGE } from '../../constants/ranges';\nimport ProblemNumber from '../../components/ProblemNumber';\nimport SheetSelect from '../../components/SheetSelect';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport * as filters from '../../constants/filters';\nimport { generateAdditionMN } from '../../utils/additionMNGenerator';\nimport { selectDisableCreateBtn } from '../../selectors/additionMNSelector';\nimport axios from 'axios';\nimport config from '../../config.json';\n\ninterface AdditionMNPageProps {\n    fromValue: string;\n    toValue: string;\n    updateFromValue: (value: string) => typedAction;\n    updateToValue: (value: string) => typedAction;\n    isFromValueError: boolean;\n    isToValueError: boolean;\n    problemValue: string;\n    problemDirection: Direction;\n    sheetNumber: number;\n    updateProblemNumber: (value: string) => typedAction;\n    updateProblemDirection: (value: Direction) => typedAction;\n    updateRestrictions: (checkboxName: string, value: boolean) => typedAction;\n    updateSheetNumber: (value: number) => typedAction;\n    disableCreateBtn: boolean;\n    restrictionsCheckedArr: string[];\n}\n\nconst AdditionMNPage: React.FC<AdditionMNPageProps> = ({\n    fromValue,\n    toValue,\n    updateFromValue,\n    updateToValue,\n    isFromValueError,\n    isToValueError,\n    problemValue,\n    problemDirection,\n    sheetNumber,\n    updateProblemNumber,\n    updateRestrictions,\n    updateSheetNumber,\n    disableCreateBtn,\n    restrictionsCheckedArr,\n}: AdditionMNPageProps) => {\n    const restrictions = [\n        {\n            key: filters.SMALL_ADDEND_LESSTHAN_10,\n            label: 'Smaller addend less than 10',\n        },\n        { key: filters.SUBTRAHEND_LESSTHAN_10, label: 'Subtrahend less than 10' },\n    ];\n\n    const handleFromChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateFromValue(event.target.value);\n    };\n\n    const handleToChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateToValue(event.target.value);\n    };\n\n    const handleProblemNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateProblemNumber(event.target.value);\n    };\n\n    const handleSheetNumberChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        updateSheetNumber(event.target.value as number);\n    };\n\n    const handleClickCreate = () => {\n        const generateProblems = (all: string[]) => {\n            const problems = generateAdditionMN(\n                parseInt(fromValue, 10),\n                parseInt(toValue, 10),\n                parseInt(problemValue, 10),\n                restrictionsCheckedArr,\n            );\n            all = [...all, ...problems];\n            return all;\n        };\n        const allProblems: string[] = Array.from(Array(sheetNumber).keys()).reduce(generateProblems, []);\n\n        axios\n            .post(config.PDFGeneratorEndpoint, {\n                equations: allProblems,\n                template: problemDirection,\n                countPerPage: parseInt(problemValue, 10),\n            })\n            .then((resp) => {\n                window.open(resp.data);\n            });\n    };\n\n    const handleRestrictionsCheckboxChange = (name: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateRestrictions(name, event.target.checked);\n    };\n\n    return (\n        <>\n            <NumberRange\n                lower={LOWER_RANGE}\n                upper={UPPER_RANGE}\n                fromValue={fromValue}\n                toValue={toValue}\n                onFromChange={handleFromChange}\n                onToChange={handleToChange}\n                isFromValueError={isFromValueError}\n                isToValueError={isToValueError}\n            />\n\n            <div className=\"mt-5\">\n                <ProblemNumber problemValue={problemValue} onProblemNumberChange={handleProblemNumberChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                <FormLabel component=\"legend\">Restrictions</FormLabel>\n                <FormGroup>\n                    {restrictions.map((item) => (\n                        <FormControlLabel\n                            key={item.key}\n                            control={\n                                <Checkbox\n                                    checked={restrictionsCheckedArr.includes(item.key)}\n                                    onChange={handleRestrictionsCheckboxChange(item.key)}\n                                    color=\"primary\"\n                                />\n                            }\n                            label={item.label}\n                        />\n                    ))}\n                </FormGroup>\n            </div>\n\n            <div className=\"mt-4\">\n                <SheetSelect sheetValue={sheetNumber} onValueChange={handleSheetNumberChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                {' '}\n                <Button variant=\"contained\" color=\"primary\" disabled={disableCreateBtn} onClick={handleClickCreate}>\n                    Create\n                </Button>\n            </div>\n        </>\n    );\n};\n\nconst mapStateToProps = (state: ApplicationState) => ({\n    problemValue: state.additionMNData.problemNumber,\n    problemDirection: state.additionMNData.problemDirection,\n    fromValue: state.additionMNData.fromValue,\n    toValue: state.additionMNData.toValue,\n    isFromValueError: state.additionMNData.isFromValueError,\n    isToValueError: state.additionMNData.isToValueError,\n    restrictionsCheckedArr: state.additionMNData.restrictionsChecked,\n    sheetNumber: state.additionMNData.sheetNumber,\n    disableCreateBtn: selectDisableCreateBtn(state),\n});\n\nconst mapDispatchToProps = {\n    updateProblemNumber,\n    updateFromValue,\n    updateToValue,\n    updateRestrictions,\n    updateSheetNumber,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdditionMNPage);\n","import AdditionMNPage from './AdditionMissingNumber';\nexport default AdditionMNPage;\n","import { getRandomIntFromInterval, isSubtrahendLessThan10, generateWithTemplate } from './common';\nimport * as filters from '../constants/filters';\n\nconst generateSubtractionArray = (\n    from: number,\n    to: number,\n    count: number,\n    restrictions: string[],\n): Array<Array<number | string>> => {\n    const result = [];\n    const set = new Set();\n    let dupCnt = 0;\n\n    while (result.length < count) {\n        const a1 = getRandomIntFromInterval(0, to);\n        const a2 = getRandomIntFromInterval(0, to);\n\n        if (a1 - a2 < from) {\n            continue;\n        }\n\n        const hash = `${a1},${a2}`;\n\n        if (!set.has(hash)) {\n            const item = [a1, a2, 'x'];\n            if (restrictions.includes(filters.SUBTRAHEND_LESSTHAN_10) && !isSubtrahendLessThan10(item, '-')) {\n                continue;\n            }\n\n            set.add(hash);\n            result.push(item);\n            dupCnt = 0;\n        } else {\n            dupCnt += 1;\n        }\n\n        if (dupCnt === 20) {\n            break;\n        }\n    }\n\n    return result;\n};\n\nexport const generateSubtraction = (from: number, to: number, count: number, restrictions: string[]): string[] => {\n    const arr = generateSubtractionArray(from, to, count, restrictions);\n    return generateWithTemplate(arr, '-');\n};\n","import { ApplicationState } from \"../reducers\";\nimport { RangeTemplateState } from \"../reducers/types\";\n\nexport const selectSubtractionData = (\n  state: ApplicationState\n): RangeTemplateState => state.subtractionData;\n\nexport const selectDisableCreateBtn = (state: ApplicationState): boolean => {\n  const { isFromValueError, isToValueError } = selectSubtractionData(state);\n\n  return isFromValueError || isToValueError;\n};\n\nexport default { selectSubtractionData, selectDisableCreateBtn };\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport NumberRange from '../../components/NumberRange';\nimport {\n    updateProblemNumber,\n    updateProblemDirection,\n    updateFromValue,\n    updateToValue,\n    updateRestrictions,\n    updateSheetNumber,\n} from '../../actions/subtractionActions';\nimport { typedAction } from '../../actions/types';\nimport { ApplicationState } from '../../reducers';\nimport { Direction } from '../../constants/directions';\nimport { LOWER_RANGE, UPPER_RANGE } from '../../constants/ranges';\nimport ProblemNumber from '../../components/ProblemNumber';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport ProblemDirection from '../../components/ProblemDirection';\nimport SheetSelect from '../../components/SheetSelect';\nimport * as filters from '../../constants/filters';\nimport { generateSubtraction } from '../../utils/subtractionGenerator';\nimport { selectDisableCreateBtn } from '../../selectors/substractionSelector';\nimport axios from 'axios';\nimport config from '../../config.json';\n\ninterface SubtractionPageProps {\n    fromValue: string;\n    toValue: string;\n    updateFromValue: (value: string) => typedAction;\n    updateToValue: (value: string) => typedAction;\n    isFromValueError: boolean;\n    isToValueError: boolean;\n    problemValue: string;\n    problemDirection: Direction;\n    sheetNumber: number;\n    updateProblemNumber: (value: string) => typedAction;\n    updateProblemDirection: (value: Direction) => typedAction;\n    updateRestrictions: (checkboxName: string, value: boolean) => typedAction;\n    updateSheetNumber: (value: number) => typedAction;\n    disableCreateBtn: boolean;\n    restrictionsCheckedArr: string[];\n}\n\nconst SubtractionPage: React.FC<SubtractionPageProps> = ({\n    fromValue,\n    toValue,\n    updateFromValue,\n    updateToValue,\n    isFromValueError,\n    isToValueError,\n    problemValue,\n    problemDirection,\n    sheetNumber,\n    updateProblemNumber,\n    updateProblemDirection,\n    updateRestrictions,\n    updateSheetNumber,\n    disableCreateBtn,\n    restrictionsCheckedArr,\n}: SubtractionPageProps) => {\n    const restrictions = [{ key: filters.SUBTRAHEND_LESSTHAN_10, label: 'Subtrahend less than 10' }];\n\n    const handleFromChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateFromValue(event.target.value);\n    };\n\n    const handleToChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateToValue(event.target.value);\n    };\n\n    const handleProblemNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateProblemNumber(event.target.value);\n    };\n\n    const handleProblemDirectionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateProblemDirection(event.target.value as Direction);\n    };\n\n    const handleSheetNumberChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        updateSheetNumber(event.target.value as number);\n    };\n\n    const handleClickCreate = () => {\n        const generateProblems = (all: string[]) => {\n            const problems = generateSubtraction(\n                parseInt(fromValue, 10),\n                parseInt(toValue, 10),\n                parseInt(problemValue, 10),\n                restrictionsCheckedArr,\n            );\n            all = [...all, ...problems];\n            return all;\n        };\n        const allProblems: string[] = Array.from(Array(sheetNumber).keys()).reduce(generateProblems, []);\n\n        axios\n            .post(config.PDFGeneratorEndpoint, {\n                equations: allProblems,\n                template: problemDirection,\n                countPerPage: parseInt(problemValue, 10),\n            })\n            .then((resp) => {\n                window.open(resp.data);\n            });\n    };\n\n    const handleRestrictionsCheckboxChange = (name: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateRestrictions(name, event.target.checked);\n    };\n\n    return (\n        <>\n            <NumberRange\n                lower={LOWER_RANGE}\n                upper={UPPER_RANGE}\n                fromValue={fromValue}\n                toValue={toValue}\n                onFromChange={handleFromChange}\n                onToChange={handleToChange}\n                isFromValueError={isFromValueError}\n                isToValueError={isToValueError}\n            />\n\n            <div className=\"mt-5\">\n                <ProblemNumber problemValue={problemValue} onProblemNumberChange={handleProblemNumberChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                <ProblemDirection\n                    problemDirection={problemDirection}\n                    onDirectionchange={handleProblemDirectionChange}\n                />\n            </div>\n\n            <div className=\"mt-4\">\n                <FormLabel component=\"legend\">Restrictions</FormLabel>\n                <FormGroup>\n                    {restrictions.map((item) => (\n                        <FormControlLabel\n                            key={item.key}\n                            control={\n                                <Checkbox\n                                    checked={restrictionsCheckedArr.includes(item.key)}\n                                    onChange={handleRestrictionsCheckboxChange(item.key)}\n                                    color=\"primary\"\n                                />\n                            }\n                            label={item.label}\n                        />\n                    ))}\n                </FormGroup>\n            </div>\n            <div className=\"mt-4\">\n                <SheetSelect sheetValue={sheetNumber} onValueChange={handleSheetNumberChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                {' '}\n                <Button variant=\"contained\" color=\"primary\" disabled={disableCreateBtn} onClick={handleClickCreate}>\n                    Create\n                </Button>\n            </div>\n        </>\n    );\n};\n\nconst mapStateToProps = (state: ApplicationState) => ({\n    problemValue: state.subtractionData.problemNumber,\n    problemDirection: state.subtractionData.problemDirection,\n    fromValue: state.subtractionData.fromValue,\n    toValue: state.subtractionData.toValue,\n    isFromValueError: state.subtractionData.isFromValueError,\n    isToValueError: state.subtractionData.isToValueError,\n    restrictionsCheckedArr: state.subtractionData.restrictionsChecked,\n    sheetNumber: state.subtractionData.sheetNumber,\n    disableCreateBtn: selectDisableCreateBtn(state),\n});\n\nconst mapDispatchToProps = {\n    updateProblemNumber,\n    updateProblemDirection,\n    updateFromValue,\n    updateToValue,\n    updateRestrictions,\n    updateSheetNumber,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SubtractionPage);\n","import SubtractionPage from './Subtraction';\nexport default SubtractionPage;\n","//return an array [\"1+x=2\",\"5-7=x\",\"9+x=100\",\"1+x=2\"]\n\nimport {\n    getRandomIntFromInterval,\n    isSmallAddendLessThan10,\n    isSubtrahendLessThan10,\n    generateWithTemplate,\n} from './common';\nimport * as filters from '../constants/filters';\n\nconst generateSubstractionMNArray = (\n    from: number,\n    to: number,\n    count: number,\n    restrictions: string[],\n): Array<Array<number | string>> => {\n    const result = [];\n    const set = new Set();\n    let dupCnt = 0;\n\n    while (result.length < count) {\n        const a1 = getRandomIntFromInterval(0, to);\n        const a2 = getRandomIntFromInterval(0, to);\n\n        const p = getRandomIntFromInterval(0, 2);\n        let hash = '';\n        let item: Array<number | string> = [];\n        switch (p) {\n            case 0:\n                if (a1 + a2 < from || a1 + a2 > to) {\n                    break;\n                }\n                item = ['x', a1, a2];\n                if (restrictions.includes(filters.SMALL_ADDEND_LESSTHAN_10) && !isSmallAddendLessThan10(item, '-')) {\n                    break;\n                }\n\n                hash = `'x',${a1},${a2}`;\n                break;\n            case 1:\n                if (a1 - a2 < from) {\n                    break;\n                }\n                item = [a1, 'x', a2];\n                if (restrictions.includes(filters.SUBTRAHEND_LESSTHAN_10) && !isSubtrahendLessThan10(item, '-')) {\n                    break;\n                }\n                hash = `${a1},'x',${a2}`;\n                break;\n            case 2:\n                if (a1 - a2 < from) {\n                    break;\n                }\n                item = [a1, a2, 'x'];\n                if (restrictions.includes(filters.SUBTRAHEND_LESSTHAN_10) && !isSubtrahendLessThan10(item, '-')) {\n                    break;\n                }\n                hash = `${a1},${a2},'x`;\n                break;\n            default:\n                break;\n        }\n\n        if (hash) {\n            if (!set.has(hash)) {\n                set.add(hash);\n                result.push(item);\n                dupCnt = 0;\n            } else {\n                dupCnt += 1;\n            }\n        }\n\n        if (dupCnt === 20) {\n            break;\n        }\n    }\n\n    return result;\n};\n\nexport const generateSubstractionMN = (from: number, to: number, count: number, restrictions: string[]): string[] => {\n    const arr = generateSubstractionMNArray(from, to, count, restrictions);\n    return generateWithTemplate(arr, '-');\n};\n","import { ApplicationState } from \"../reducers\";\nimport { RangeTemplateState } from \"../reducers/types\";\n\nexport const selectSubtractionMNData = (\n  state: ApplicationState\n): RangeTemplateState => state.subtractionMNData;\n\nexport const selectDisableCreateBtn = (state: ApplicationState): boolean => {\n  const { isFromValueError, isToValueError } = selectSubtractionMNData(state);\n\n  return isFromValueError || isToValueError;\n};\n\nexport default { selectSubtractionMNData, selectDisableCreateBtn };\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport NumberRange from '../../components/NumberRange';\nimport {\n    updateProblemNumber,\n    updateFromValue,\n    updateToValue,\n    updateRestrictions,\n    updateSheetNumber,\n} from '../../actions/subtractionMNActions';\nimport { typedAction } from '../../actions/types';\nimport { ApplicationState } from '../../reducers';\nimport { Direction } from '../../constants/directions';\nimport { LOWER_RANGE, UPPER_RANGE } from '../../constants/ranges';\nimport ProblemNumber from '../../components/ProblemNumber';\nimport SheetSelect from '../../components/SheetSelect';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport * as filters from '../../constants/filters';\nimport { generateSubstractionMN } from '../../utils/subtractionMNGenerator';\nimport { selectDisableCreateBtn } from '../../selectors/subtractionMNSelector';\nimport axios from 'axios';\nimport config from '../../config.json';\n\ninterface SubtractionMNPageProps {\n    fromValue: string;\n    toValue: string;\n    updateFromValue: (value: string) => typedAction;\n    updateToValue: (value: string) => typedAction;\n    isFromValueError: boolean;\n    isToValueError: boolean;\n    problemValue: string;\n    problemDirection: Direction;\n    sheetNumber: number;\n    updateProblemNumber: (value: string) => typedAction;\n    updateProblemDirection: (value: Direction) => typedAction;\n    updateRestrictions: (checkboxName: string, value: boolean) => typedAction;\n    updateSheetNumber: (value: number) => typedAction;\n    disableCreateBtn: boolean;\n    restrictionsCheckedArr: string[];\n}\n\nconst SubtractionMNPage: React.FC<SubtractionMNPageProps> = ({\n    fromValue,\n    toValue,\n    updateFromValue,\n    updateToValue,\n    isFromValueError,\n    isToValueError,\n    problemValue,\n    problemDirection,\n    sheetNumber,\n    updateProblemNumber,\n    updateRestrictions,\n    updateSheetNumber,\n    disableCreateBtn,\n    restrictionsCheckedArr,\n}: SubtractionMNPageProps) => {\n    const restrictions = [\n        {\n            key: filters.SMALL_ADDEND_LESSTHAN_10,\n            label: 'Smaller addend less than 10',\n        },\n        { key: filters.SUBTRAHEND_LESSTHAN_10, label: 'Subtrahend less than 10' },\n    ];\n\n    const handleFromChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateFromValue(event.target.value);\n    };\n\n    const handleToChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateToValue(event.target.value);\n    };\n\n    const handleProblemNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateProblemNumber(event.target.value);\n    };\n\n    const handleSheetNumberChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        updateSheetNumber(event.target.value as number);\n    };\n\n    const handleClickCreate = () => {\n        const generateProblems = (all: string[]) => {\n            const problems = generateSubstractionMN(\n                parseInt(fromValue, 10),\n                parseInt(toValue, 10),\n                parseInt(problemValue, 10),\n                restrictionsCheckedArr,\n            );\n            all = [...all, ...problems];\n            return all;\n        };\n        const allProblems: string[] = Array.from(Array(sheetNumber).keys()).reduce(generateProblems, []);\n\n        axios\n            .post(config.PDFGeneratorEndpoint, {\n                equations: allProblems,\n                template: problemDirection,\n                countPerPage: parseInt(problemValue, 10),\n            })\n            .then((resp) => {\n                window.open(resp.data);\n            });\n    };\n\n    const handleRestrictionsCheckboxChange = (name: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateRestrictions(name, event.target.checked);\n    };\n\n    return (\n        <>\n            <NumberRange\n                lower={LOWER_RANGE}\n                upper={UPPER_RANGE}\n                fromValue={fromValue}\n                toValue={toValue}\n                onFromChange={handleFromChange}\n                onToChange={handleToChange}\n                isFromValueError={isFromValueError}\n                isToValueError={isToValueError}\n            />\n\n            <div className=\"mt-5\">\n                <ProblemNumber problemValue={problemValue} onProblemNumberChange={handleProblemNumberChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                <FormLabel component=\"legend\">Restrictions</FormLabel>\n                <FormGroup>\n                    {restrictions.map((item) => (\n                        <FormControlLabel\n                            key={item.key}\n                            control={\n                                <Checkbox\n                                    checked={restrictionsCheckedArr.includes(item.key)}\n                                    onChange={handleRestrictionsCheckboxChange(item.key)}\n                                    color=\"primary\"\n                                />\n                            }\n                            label={item.label}\n                        />\n                    ))}\n                </FormGroup>\n            </div>\n\n            <div className=\"mt-4\">\n                <SheetSelect sheetValue={sheetNumber} onValueChange={handleSheetNumberChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                {' '}\n                <Button variant=\"contained\" color=\"primary\" disabled={disableCreateBtn} onClick={handleClickCreate}>\n                    Create\n                </Button>\n            </div>\n        </>\n    );\n};\n\nconst mapStateToProps = (state: ApplicationState) => ({\n    problemValue: state.subtractionMNData.problemNumber,\n    problemDirection: state.subtractionMNData.problemDirection,\n    fromValue: state.subtractionMNData.fromValue,\n    toValue: state.subtractionMNData.toValue,\n    isFromValueError: state.subtractionMNData.isFromValueError,\n    isToValueError: state.subtractionMNData.isToValueError,\n    restrictionsCheckedArr: state.subtractionMNData.restrictionsChecked,\n    sheetNumber: state.subtractionMNData.sheetNumber,\n    disableCreateBtn: selectDisableCreateBtn(state),\n});\n\nconst mapDispatchToProps = {\n    updateProblemNumber,\n    updateFromValue,\n    updateToValue,\n    updateRestrictions,\n    updateSheetNumber,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SubtractionMNPage);\n","import SubtractionMNPage from './SubtractionMissingNumber';\nexport default SubtractionMNPage;","import Header from './Header';\nexport default Header;","import React from \"react\";\nimport \"./Header.scss\";\n\ninterface HeaderProps {\n  onClickLogo: () => void;\n}\n\nconst Header:React.FC<HeaderProps> = ({ onClickLogo }: HeaderProps) => {\n  return (\n    <div className=\"bm-header d-flex flex-md-row flex-column mb-3\">\n      <div className=\"bm-header-title\" onClick={onClickLogo}>\n        Blankmath\n      </div>\n      <div className=\"bm-header-subtitle ml-md-3 mt-2 align-self-md-center\">\n        Unlimited FREE math worksheets\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import { getRandomIntFromInterval, generateThreeNumberTemplate } from './common';\n\nconst generateThreeNumbersArray = (digitValue: string, count: number): Array<Array<number | string>> => {\n    const result = [];\n    let range = 10;\n\n    switch (digitValue) {\n        case '1d':\n            range = 27;\n            break;\n        case '2d':\n            range = 100;\n            break;\n        case '3d':\n            range = 1000;\n            break;\n        case 'l20':\n            range = 20;\n            break;\n        default:\n            break;\n    }\n\n    const set = new Set();\n\n    let c = 0;\n\n    while (c < count) {\n        const a1 = getRandomIntFromInterval(1, range - 1);\n        const a2 = getRandomIntFromInterval(1, range - 1);\n        const a3 = getRandomIntFromInterval(1, range - 1);\n\n        const p = getRandomIntFromInterval(0, 3);\n        let hash = '';\n        let item: Array<number | string> = [];\n        let valid = true;\n\n        switch (p) {\n            case 0:\n            case 1:\n            case 2:\n                valid = true;\n                if (a1 + a2 < a3) {\n                    switch (digitValue) {\n                        case '1d':\n                        case 'l20':\n                            if (a1 >= 10 || a2 >= 10) {\n                                valid = false;\n                            }\n                            break;\n                        case '2d':\n                            if (a1 >= 100 || a2 >= 100) {\n                                valid = false;\n                            }\n                            break;\n                        case '3d':\n                            if (a1 >= 1000 || a2 >= 1000) {\n                                valid = false;\n                            }\n                            break;\n                        default:\n                            break;\n                    }\n                    if (valid) {\n                        switch (p) {\n                            case 0:\n                                hash = `x,${a1},${a2},${a3}`;\n                                item = ['x', a1, a2, a3];\n                                break;\n                            case 1:\n                                hash = `${a1},x,${a2},${a3}`;\n                                item = [a1, 'x', a2, a3];\n                                break;\n                            case 2:\n                                hash = `${a1},${a2},x,${a3}`;\n                                item = [a1, a2, 'x', a3];\n                                break;\n                            default:\n                                break;\n                        }\n                    }\n                }\n                break;\n            case 3:\n                valid = true;\n                switch (digitValue) {\n                    case '1d':\n                        if (a1 >= 10 || a2 >= 10 || a3 >= 10) {\n                            valid = false;\n                        }\n                        break;\n                    case '2d':\n                        if (a1 >= 100 || a2 >= 100 || a3 >= 100) {\n                            valid = false;\n                        }\n                        break;\n                    case '3d':\n                        if (a1 >= 1000 || a2 >= 1000 || a3 >= 1000) {\n                            valid = false;\n                        }\n                        break;\n                    case 'l20':\n                        if (a1 >= 10 || a2 >= 10 || a3 >= 10 || a1 + a2 + a3 > 20) {\n                            valid = false;\n                        }\n                        break;\n                    default:\n                        break;\n                }\n                if (valid) {\n                    hash = `${a1},${a2},${a3},x`;\n                    item = [a1, a2, a3, 'x'];\n                }\n\n                break;\n            default:\n                break;\n        }\n\n        if (hash && !set.has(hash)) {\n            set.add(hash);\n            result.push(item);\n            c++;\n        }\n    }\n\n    return result;\n};\n\nexport const generateThreeMissingNumbers = (digitValue: string, count: number): string[] => {\n    const arr = generateThreeNumbersArray(digitValue, count);\n\n    return generateThreeNumberTemplate(arr, '+');\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ProblemNumber from '../../components/ProblemNumber';\nimport SheetSelect from '../../components/SheetSelect';\nimport { updateProblemNumber, updateNumberOfDigits, updateSheetNumber } from '../../actions/addThreeNumbersMNActions';\nimport { typedAction } from '../../actions/types';\nimport { ApplicationState } from '../../reducers';\nimport NumberOfDigits from '../../components/NumberOfDigits';\nimport Button from '@material-ui/core/Button';\nimport { generateThreeMissingNumbers } from '../../utils/addThreeNumbersMNGenerator';\nimport axios from 'axios';\nimport config from '../../config.json';\n\ninterface AddThreeMissingNumberProps {\n    updateProblemNumber: (value: string) => typedAction;\n    updateNumberOfDigits: (value: string) => typedAction;\n    problemValue: string;\n    digitValue: string;\n    sheetNumber: number;\n    updateSheetNumber: (value: number) => typedAction;\n}\n\nconst AddThreeMissingNumber: React.FC<AddThreeMissingNumberProps> = ({\n    problemValue,\n    digitValue,\n    updateProblemNumber,\n    updateNumberOfDigits,\n    sheetNumber,\n    updateSheetNumber,\n}: AddThreeMissingNumberProps) => {\n    const handleProblemNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateProblemNumber(event.target.value);\n    };\n\n    const handleDigitValueChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateNumberOfDigits(event.target.value);\n    };\n\n    const handleSheetNumberChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        updateSheetNumber(event.target.value as number);\n    };\n\n    const handleClickCreate = () => {\n        const generateProblems = (all: string[]) => {\n            const problems = generateThreeMissingNumbers(digitValue, parseInt(problemValue, 10));\n            all = [...all, ...problems];\n            return all;\n        };\n        const allProblems: string[] = Array.from(Array(sheetNumber).keys()).reduce(generateProblems, []);\n\n        axios\n            .post(config.PDFGeneratorEndpoint, {\n                equations: allProblems,\n                template: '3num',\n                countPerPage: parseInt(problemValue, 10),\n            })\n            .then((resp) => {\n                window.open(resp.data);\n            });\n    };\n\n    return (\n        <>\n            <div className=\"mt-5\">\n                <ProblemNumber problemValue={problemValue} onProblemNumberChange={handleProblemNumberChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                <NumberOfDigits digitValue={digitValue} onDigitChange={handleDigitValueChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                <SheetSelect sheetValue={sheetNumber} onValueChange={handleSheetNumberChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                {' '}\n                <Button variant=\"contained\" color=\"primary\" onClick={handleClickCreate}>\n                    Create\n                </Button>\n            </div>\n        </>\n    );\n};\n\nconst mapStateToProps = (state: ApplicationState) => ({\n    problemValue: state.addThreeNumbersMNData.problemNumber,\n    digitValue: state.addThreeNumbersMNData.digitNumber,\n    sheetNumber: state.addThreeNumbersMNData.sheetNumber,\n});\n\nconst mapDispatchToProps = {\n    updateProblemNumber,\n    updateNumberOfDigits,\n    updateSheetNumber,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddThreeMissingNumber);\n","import AddThreeMissingNumber from './AddThreeMissingNumber';\nexport default AddThreeMissingNumber;\n","import { ApplicationState } from '../reducers';\nimport { RangeTemplateState } from '../reducers/types';\n\nexport const selectMixedAddMinusData = (state: ApplicationState): RangeTemplateState => state.mixedAddMinusData;\n\nexport const selectDisableCreateBtn = (state: ApplicationState): boolean => {\n    const { isFromValueError, isToValueError } = selectMixedAddMinusData(state);\n\n    return isFromValueError || isToValueError;\n};\n\nexport default { selectMixedAddMinusData, selectDisableCreateBtn };\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport NumberRange from '../../components/NumberRange';\nimport {\n    updateProblemNumber,\n    updateProblemDirection,\n    updateFromValue,\n    updateToValue,\n    updateRestrictions,\n    updateSheetNumber,\n} from '../../actions/mixedAddMinusActions';\nimport { typedAction } from '../../actions/types';\nimport { ApplicationState } from '../../reducers';\nimport { LOWER_RANGE, UPPER_RANGE } from '../../constants/ranges';\nimport ProblemNumber from '../../components/ProblemNumber';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport ProblemDirection from '../../components/ProblemDirection';\nimport SheetSelect from '../../components/SheetSelect';\nimport { Direction } from '../../constants/directions';\nimport * as filters from '../../constants/filters';\nimport { selectDisableCreateBtn } from '../../selectors/mixedAddMinusSelector';\nimport { generateMixedAddMinus } from '../../utils/mixedAddMinusGenerator';\nimport axios from 'axios';\nimport config from '../../config.json';\n\ninterface MixedAddMinusPageProps {\n    fromValue: string;\n    toValue: string;\n    updateFromValue: (value: string) => typedAction;\n    updateToValue: (value: string) => typedAction;\n    isFromValueError: boolean;\n    isToValueError: boolean;\n    problemValue: string;\n    problemDirection: Direction;\n    sheetNumber: number;\n    updateProblemNumber: (value: string) => typedAction;\n    updateProblemDirection: (value: Direction) => typedAction;\n    updateRestrictions: (checkboxName: string, value: boolean) => typedAction;\n    updateSheetNumber: (value: number) => typedAction;\n    disableCreateBtn: boolean;\n    restrictionsCheckedArr: string[];\n}\n\nconst MixedAddMinusPage: React.FC<MixedAddMinusPageProps> = ({\n    fromValue,\n    toValue,\n    updateFromValue,\n    updateToValue,\n    isFromValueError,\n    isToValueError,\n    problemValue,\n    problemDirection,\n    sheetNumber,\n    updateProblemNumber,\n    updateProblemDirection,\n    updateRestrictions,\n    updateSheetNumber,\n    disableCreateBtn,\n    restrictionsCheckedArr,\n}: MixedAddMinusPageProps) => {\n    const restrictions = [\n        {\n            key: filters.SMALL_ADDEND_LESSTHAN_10,\n            label: 'Smaller addend less than 10',\n        },\n        { key: filters.SUBTRAHEND_LESSTHAN_10, label: 'Subtrahend less than 10' },\n    ];\n\n    const handleFromChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateFromValue(event.target.value);\n    };\n\n    const handleToChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateToValue(event.target.value);\n    };\n\n    const handleProblemNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateProblemNumber(event.target.value);\n    };\n\n    const handleProblemDirectionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateProblemDirection(event.target.value as Direction);\n    };\n\n    const handleSheetNumberChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        updateSheetNumber(event.target.value as number);\n    };\n\n    const handleRestrictionsCheckboxChange = (name: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateRestrictions(name, event.target.checked);\n    };\n\n    const handleClickCreate = () => {\n        const generateProblems = (all: string[]) => {\n            const problems = generateMixedAddMinus(\n                parseInt(fromValue, 10),\n                parseInt(toValue, 10),\n                parseInt(problemValue, 10),\n                restrictionsCheckedArr,\n            );\n            all = [...all, ...problems];\n            return all;\n        };\n        const allProblems: string[] = Array.from(Array(sheetNumber).keys()).reduce(generateProblems, []);\n\n        axios\n            .post(config.PDFGeneratorEndpoint, {\n                equations: allProblems,\n                template: problemDirection,\n                countPerPage: parseInt(problemValue, 10),\n            })\n            .then((resp) => {\n                window.open(resp.data);\n            });\n    };\n\n    return (\n        <>\n            <NumberRange\n                lower={LOWER_RANGE}\n                upper={UPPER_RANGE}\n                fromValue={fromValue}\n                toValue={toValue}\n                onFromChange={handleFromChange}\n                onToChange={handleToChange}\n                isFromValueError={isFromValueError}\n                isToValueError={isToValueError}\n            />\n\n            <div className=\"mt-5\">\n                <ProblemNumber problemValue={problemValue} onProblemNumberChange={handleProblemNumberChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                <ProblemDirection\n                    problemDirection={problemDirection}\n                    onDirectionchange={handleProblemDirectionChange}\n                />\n            </div>\n\n            <div className=\"mt-4\">\n                <FormLabel component=\"legend\">Restrictions</FormLabel>\n                <FormGroup>\n                    {restrictions.map((item) => (\n                        <FormControlLabel\n                            key={item.key}\n                            control={\n                                <Checkbox\n                                    checked={restrictionsCheckedArr.includes(item.key)}\n                                    onChange={handleRestrictionsCheckboxChange(item.key)}\n                                    color=\"primary\"\n                                />\n                            }\n                            label={item.label}\n                        />\n                    ))}\n                </FormGroup>\n            </div>\n\n            <div className=\"mt-4\">\n                <SheetSelect sheetValue={sheetNumber} onValueChange={handleSheetNumberChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                {' '}\n                <Button variant=\"contained\" color=\"primary\" disabled={disableCreateBtn} onClick={handleClickCreate}>\n                    Create\n                </Button>\n            </div>\n        </>\n    );\n};\n\nconst mapStateToProps = (state: ApplicationState) => ({\n    problemValue: state.mixedAddMinusData.problemNumber,\n    problemDirection: state.mixedAddMinusData.problemDirection,\n    fromValue: state.mixedAddMinusData.fromValue,\n    toValue: state.mixedAddMinusData.toValue,\n    isFromValueError: state.mixedAddMinusData.isFromValueError,\n    isToValueError: state.mixedAddMinusData.isToValueError,\n    restrictionsCheckedArr: state.mixedAddMinusData.restrictionsChecked,\n    sheetNumber: state.mixedAddMinusData.sheetNumber,\n    disableCreateBtn: selectDisableCreateBtn(state),\n});\n\nconst mapDispatchToProps = {\n    updateProblemNumber,\n    updateProblemDirection,\n    updateFromValue,\n    updateToValue,\n    updateRestrictions,\n    updateSheetNumber,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MixedAddMinusPage);\n","import MixedAddMinus from './MixedAddMinus';\nexport default MixedAddMinus;\n","import { generateAddition } from './additionGenerator';\nimport { generateSubtraction } from './subtractionGenerator';\nimport { getRandomIntFromInterval } from './common';\n\nexport const generateMixedAddMinus = (from: number, to: number, count: number, restrictions: string[]): string[] => {\n    const additionArr: string[] = generateAddition(from, to, count, restrictions);\n    const subtractionArr: string[] = generateSubtraction(from, to, count, restrictions);\n    const all = [...additionArr, ...subtractionArr];\n    const result: string[] = [];\n    const set = new Set();\n    while (result.length < count && set.size < all.length) {\n        const p = getRandomIntFromInterval(0, all.length - 1);\n        if (!set.has(p)) {\n            set.add(p);\n            result.push(all[p]);\n        }\n    }\n\n    return result;\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport NumberRange from '../../components/NumberRange';\nimport {\n    updateProblemNumber,\n    updateFromValue,\n    updateToValue,\n    updateRestrictions,\n    updateSheetNumber,\n} from '../../actions/mixedAddMinusMNActions';\nimport { typedAction } from '../../actions/types';\nimport { ApplicationState } from '../../reducers';\nimport { LOWER_RANGE, UPPER_RANGE } from '../../constants/ranges';\nimport ProblemNumber from '../../components/ProblemNumber';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport SheetSelect from '../../components/SheetSelect';\nimport { Direction } from '../../constants/directions';\nimport * as filters from '../../constants/filters';\nimport { selectDisableCreateBtn } from '../../selectors/mixedAddMinusSelector';\nimport { generateMixedAddMinusMN } from '../../utils/mixedAddMinusMNGenerator';\nimport axios from 'axios';\nimport config from '../../config.json';\n\ninterface MixedAddMinusMNPageProps {\n    fromValue: string;\n    toValue: string;\n    updateFromValue: (value: string) => typedAction;\n    updateToValue: (value: string) => typedAction;\n    isFromValueError: boolean;\n    isToValueError: boolean;\n    problemValue: string;\n    problemDirection: Direction;\n    sheetNumber: number;\n    updateProblemNumber: (value: string) => typedAction;\n    updateRestrictions: (checkboxName: string, value: boolean) => typedAction;\n    updateSheetNumber: (value: number) => typedAction;\n    disableCreateBtn: boolean;\n    restrictionsCheckedArr: string[];\n}\n\nconst MixedAddMinusMNPage: React.FC<MixedAddMinusMNPageProps> = ({\n    fromValue,\n    toValue,\n    updateFromValue,\n    updateToValue,\n    isFromValueError,\n    isToValueError,\n    problemValue,\n    problemDirection,\n    sheetNumber,\n    updateProblemNumber,\n    updateRestrictions,\n    updateSheetNumber,\n    disableCreateBtn,\n    restrictionsCheckedArr,\n}: MixedAddMinusMNPageProps) => {\n    const restrictions = [\n        {\n            key: filters.SMALL_ADDEND_LESSTHAN_10,\n            label: 'Smaller addend less than 10',\n        },\n        { key: filters.SUBTRAHEND_LESSTHAN_10, label: 'Subtrahend less than 10' },\n    ];\n\n    const handleFromChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateFromValue(event.target.value);\n    };\n\n    const handleToChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateToValue(event.target.value);\n    };\n\n    const handleProblemNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateProblemNumber(event.target.value);\n    };\n\n    const handleSheetNumberChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        updateSheetNumber(event.target.value as number);\n    };\n\n    const handleRestrictionsCheckboxChange = (name: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateRestrictions(name, event.target.checked);\n    };\n\n    const handleClickCreate = () => {\n        const generateProblems = (all: string[]) => {\n            const problems = generateMixedAddMinusMN(\n                parseInt(fromValue, 10),\n                parseInt(toValue, 10),\n                parseInt(problemValue, 10),\n                restrictionsCheckedArr,\n            );\n            all = [...all, ...problems];\n            return all;\n        };\n        const allProblems: string[] = Array.from(Array(sheetNumber).keys()).reduce(generateProblems, []);\n\n        axios\n            .post(config.PDFGeneratorEndpoint, {\n                equations: allProblems,\n                template: problemDirection,\n                countPerPage: parseInt(problemValue, 10),\n            })\n            .then((resp) => {\n                window.open(resp.data);\n            });\n    };\n\n    return (\n        <>\n            <NumberRange\n                lower={LOWER_RANGE}\n                upper={UPPER_RANGE}\n                fromValue={fromValue}\n                toValue={toValue}\n                onFromChange={handleFromChange}\n                onToChange={handleToChange}\n                isFromValueError={isFromValueError}\n                isToValueError={isToValueError}\n            />\n\n            <div className=\"mt-5\">\n                <ProblemNumber problemValue={problemValue} onProblemNumberChange={handleProblemNumberChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                <FormLabel component=\"legend\">Restrictions</FormLabel>\n                <FormGroup>\n                    {restrictions.map((item) => (\n                        <FormControlLabel\n                            key={item.key}\n                            control={\n                                <Checkbox\n                                    checked={restrictionsCheckedArr.includes(item.key)}\n                                    onChange={handleRestrictionsCheckboxChange(item.key)}\n                                    color=\"primary\"\n                                />\n                            }\n                            label={item.label}\n                        />\n                    ))}\n                </FormGroup>\n            </div>\n\n            <div className=\"mt-4\">\n                <SheetSelect sheetValue={sheetNumber} onValueChange={handleSheetNumberChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                {' '}\n                <Button variant=\"contained\" color=\"primary\" disabled={disableCreateBtn} onClick={handleClickCreate}>\n                    Create\n                </Button>\n            </div>\n        </>\n    );\n};\n\nconst mapStateToProps = (state: ApplicationState) => ({\n    problemValue: state.mixedAddMinusMNData.problemNumber,\n    problemDirection: state.mixedAddMinusMNData.problemDirection,\n    fromValue: state.mixedAddMinusMNData.fromValue,\n    toValue: state.mixedAddMinusMNData.toValue,\n    isFromValueError: state.mixedAddMinusMNData.isFromValueError,\n    isToValueError: state.mixedAddMinusMNData.isToValueError,\n    restrictionsCheckedArr: state.mixedAddMinusMNData.restrictionsChecked,\n    sheetNumber: state.mixedAddMinusMNData.sheetNumber,\n    disableCreateBtn: selectDisableCreateBtn(state),\n});\n\nconst mapDispatchToProps = {\n    updateProblemNumber,\n    updateFromValue,\n    updateToValue,\n    updateRestrictions,\n    updateSheetNumber,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MixedAddMinusMNPage);\n","import MixedAddMinusMN from './MixedAddMinusMN';\nexport default MixedAddMinusMN;\n","import { generateAdditionMN } from './additionMNGenerator';\nimport { generateSubstractionMN } from './subtractionMNGenerator';\nimport { getRandomIntFromInterval } from './common';\n\nexport const generateMixedAddMinusMN = (from: number, to: number, count: number, restrictions: string[]): string[] => {\n    const additionArr: string[] = generateAdditionMN(from, to, count, restrictions);\n    const subtractionArr: string[] = generateSubstractionMN(from, to, count, restrictions);\n    const all = [...additionArr, ...subtractionArr];\n    const result: string[] = [];\n    const set = new Set();\n    while (result.length < count && set.size < all.length) {\n        const p = getRandomIntFromInterval(0, all.length - 1);\n        if (!set.has(p)) {\n            set.add(p);\n            result.push(all[p]);\n        }\n    }\n\n    return result;\n};\n","import { getRandomIntFromInterval } from './common';\n\nconst generateDivisionArray = (digitValue: string, count: number): Array<Array<number | string>> => {\n    const result = [];\n    let range = 10;\n\n    switch (digitValue) {\n        case '1d':\n            range = 10;\n            break;\n        case '2d':\n            range = 100;\n            break;\n        case '3d':\n            range = 1000;\n            break;\n        case 'l20':\n            range = 20;\n            break;\n        default:\n            break;\n    }\n\n    const set = new Set();\n\n    let c = 0;\n\n    while (c < count) {\n        const a1 = getRandomIntFromInterval(1, range - 1);\n        const a2 = getRandomIntFromInterval(1, range - 1);\n\n        const hash = `${a1 * a2},${a1}`;\n\n        if (!set.has(hash)) {\n            const item = [a1 * a2, a1, 'x'];\n            set.add(hash);\n            result.push(item);\n            c++;\n        }\n    }\n\n    return result;\n};\n\nexport const generateDivision = (digitValue: string, count: number): string[] => {\n    const arr = generateDivisionArray(digitValue, count);\n\n    return arr.map((item) => {\n        return `${item[0]}/${item[1]}=${item[2]}`;\n    });\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ProblemNumber from '../../components/ProblemNumber';\nimport SheetSelect from '../../components/SheetSelect';\nimport { updateProblemNumber, updateNumberOfDigits, updateSheetNumber } from '../../actions/divisionActions';\nimport { typedAction } from '../../actions/types';\nimport { ApplicationState } from '../../reducers';\nimport { Direction } from '../../constants/directions';\nimport NumberOfDigits from '../../components/NumberOfDigits';\nimport Button from '@material-ui/core/Button';\nimport { generateDivision } from '../../utils/divisionGenerator';\nimport axios from 'axios';\nimport config from '../../config.json';\n\ninterface DivisionPageProps {\n    problemValue: string;\n    problemDirection: Direction;\n    digitValue: string;\n    updateProblemNumber: (value: string) => typedAction;\n    updateProblemDirection: (value: Direction) => typedAction;\n    updateNumberOfDigits: (value: string) => typedAction;\n    sheetNumber: number;\n    updateSheetNumber: (value: number) => typedAction;\n}\n\nconst DivisionPage: React.FC<DivisionPageProps> = ({\n    problemValue,\n    problemDirection,\n    digitValue,\n    updateProblemNumber,\n    updateNumberOfDigits,\n    sheetNumber,\n    updateSheetNumber,\n}: DivisionPageProps) => {\n    const handleProblemNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateProblemNumber(event.target.value);\n    };\n\n    const handleDigitValueChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateNumberOfDigits(event.target.value);\n    };\n\n    const handleSheetNumberChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        updateSheetNumber(event.target.value as number);\n    };\n\n    const handleClickCreate = () => {\n        const generateProblems = (all: string[]) => {\n            const problems = generateDivision(digitValue, parseInt(problemValue, 10));\n            all = [...all, ...problems];\n            return all;\n        };\n        const allProblems: string[] = Array.from(Array(sheetNumber).keys()).reduce(generateProblems, []);\n        axios\n            .post(config.PDFGeneratorEndpoint, {\n                equations: allProblems,\n                template: problemDirection,\n                countPerPage: parseInt(problemValue, 10),\n            })\n            .then((resp) => {\n                window.open(resp.data);\n            });\n    };\n\n    return (\n        <>\n            <div className=\"mt-5\">\n                <ProblemNumber problemValue={problemValue} onProblemNumberChange={handleProblemNumberChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                <NumberOfDigits digitValue={digitValue} onDigitChange={handleDigitValueChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                <SheetSelect sheetValue={sheetNumber} onValueChange={handleSheetNumberChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                {' '}\n                <Button variant=\"contained\" color=\"primary\" onClick={handleClickCreate}>\n                    Create\n                </Button>\n            </div>\n        </>\n    );\n};\n\nconst mapStateToProps = (state: ApplicationState) => ({\n    problemValue: state.divisionData.problemNumber,\n    problemDirection: state.divisionData.problemDirection!,\n    digitValue: state.divisionData.digitNumber,\n    sheetNumber: state.divisionData.sheetNumber,\n});\n\nconst mapDispatchToProps = {\n    updateProblemNumber,\n    updateNumberOfDigits,\n    updateSheetNumber,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DivisionPage);\n","import DivisionPage from './Division';\nexport default DivisionPage;\n","import { getRandomIntFromInterval } from './common';\n\nconst generateDivisionArray = (digitValue: string, count: number): Array<Array<number | string>> => {\n    const result = [];\n    let range = 10;\n\n    switch (digitValue) {\n        case '1d':\n            range = 10;\n            break;\n        case '2d':\n            range = 100;\n            break;\n        case '3d':\n            range = 1000;\n            break;\n        case 'l20':\n            range = 20;\n            break;\n        default:\n            break;\n    }\n\n    const set = new Set();\n\n    while (result.length < count) {\n        const a1 = getRandomIntFromInterval(1, range - 1);\n        const a2 = getRandomIntFromInterval(1, range - 1);\n\n        const p = getRandomIntFromInterval(0, 2);\n        let hash = '';\n        let item: Array<number | string> = [];\n        switch (p) {\n            case 0:\n                hash = `x,${a1},${a2}`;\n                item = ['x', a1, a2];\n                break;\n            case 1:\n                hash = `${a1 * a2},x,${a1}`;\n                item = [a1 * a2, 'x', a1];\n                break;\n            case 2:\n                hash = `${a1 * a2},${a1},x`;\n                item = [a1 * a2, a1, 'x'];\n                break;\n            default:\n                break;\n        }\n\n        if (!set.has(hash)) {\n            set.add(hash);\n            result.push(item);\n        }\n    }\n\n    return result;\n};\n\nexport const generateDivisionMN = (digitValue: string, count: number): string[] => {\n    const arr = generateDivisionArray(digitValue, count);\n\n    return arr.map((item) => {\n        return `${item[0]}/${item[1]}=${item[2]}`;\n    });\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ProblemNumber from '../../components/ProblemNumber';\nimport SheetSelect from '../../components/SheetSelect';\nimport { updateProblemNumber, updateNumberOfDigits, updateSheetNumber } from '../../actions/divisionMNActions';\nimport { typedAction } from '../../actions/types';\nimport { ApplicationState } from '../../reducers';\nimport { Direction } from '../../constants/directions';\nimport NumberOfDigits from '../../components/NumberOfDigits';\nimport Button from '@material-ui/core/Button';\nimport { generateDivisionMN } from '../../utils/divisionMNGenerator';\nimport axios from 'axios';\nimport config from '../../config.json';\n\ninterface DivisionMNPageProps {\n    problemValue: string;\n    problemDirection: Direction;\n    digitValue: string;\n    updateProblemNumber: (value: string) => typedAction;\n    updateNumberOfDigits: (value: string) => typedAction;\n    sheetNumber: number;\n    updateSheetNumber: (value: number) => typedAction;\n}\n\nconst DivisionMNPage: React.FC<DivisionMNPageProps> = ({\n    problemValue,\n    problemDirection,\n    digitValue,\n    updateProblemNumber,\n    updateNumberOfDigits,\n    sheetNumber,\n    updateSheetNumber,\n}: DivisionMNPageProps) => {\n    const handleProblemNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateProblemNumber(event.target.value);\n    };\n\n    const handleDigitValueChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateNumberOfDigits(event.target.value);\n    };\n\n    const handleSheetNumberChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        updateSheetNumber(event.target.value as number);\n    };\n\n    const handleClickCreate = () => {\n        const generateProblems = (all: string[]) => {\n            const problems = generateDivisionMN(digitValue, parseInt(problemValue, 10));\n            all = [...all, ...problems];\n            return all;\n        };\n        const allProblems: string[] = Array.from(Array(sheetNumber).keys()).reduce(generateProblems, []);\n        axios\n            .post(config.PDFGeneratorEndpoint, {\n                equations: allProblems,\n                template: problemDirection,\n                countPerPage: parseInt(problemValue, 10),\n            })\n            .then((resp) => {\n                window.open(resp.data);\n            });\n    };\n\n    return (\n        <>\n            <div className=\"mt-5\">\n                <ProblemNumber problemValue={problemValue} onProblemNumberChange={handleProblemNumberChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                <NumberOfDigits digitValue={digitValue} onDigitChange={handleDigitValueChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                <SheetSelect sheetValue={sheetNumber} onValueChange={handleSheetNumberChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                {' '}\n                <Button variant=\"contained\" color=\"primary\" onClick={handleClickCreate}>\n                    Create\n                </Button>\n            </div>\n        </>\n    );\n};\n\nconst mapStateToProps = (state: ApplicationState) => ({\n    problemValue: state.divisionMNData.problemNumber,\n    problemDirection: state.divisionMNData.problemDirection!,\n    digitValue: state.divisionMNData.digitNumber,\n    sheetNumber: state.divisionMNData.sheetNumber,\n});\n\nconst mapDispatchToProps = {\n    updateProblemNumber,\n    updateNumberOfDigits,\n    updateSheetNumber,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DivisionMNPage);\n","import DivisionMNPage from './DivisionMissingNumber';\nexport default DivisionMNPage;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ProblemNumber from '../../components/ProblemNumber';\nimport SheetSelect from '../../components/SheetSelect';\nimport { updateProblemNumber, updateNumberOfDigits, updateSheetNumber } from '../../actions/mixedTimesDivideActions';\nimport { typedAction } from '../../actions/types';\nimport { ApplicationState } from '../../reducers';\nimport { Direction } from '../../constants/directions';\nimport NumberOfDigits from '../../components/NumberOfDigits';\nimport Button from '@material-ui/core/Button';\nimport { generateMixedTimesDivide } from '../../utils/mixedTimesDivideGenerator';\nimport axios from 'axios';\nimport config from '../../config.json';\n\ninterface MixedTimesDividePageProps {\n    problemValue: string;\n    problemDirection: Direction;\n    digitValue: string;\n    updateProblemNumber: (value: string) => typedAction;\n    updateProblemDirection: (value: Direction) => typedAction;\n    updateNumberOfDigits: (value: string) => typedAction;\n    sheetNumber: number;\n    updateSheetNumber: (value: number) => typedAction;\n}\n\nconst MixedTimesDividePage: React.FC<MixedTimesDividePageProps> = ({\n    problemValue,\n    problemDirection,\n    digitValue,\n    updateProblemNumber,\n    updateNumberOfDigits,\n    sheetNumber,\n    updateSheetNumber,\n}: MixedTimesDividePageProps) => {\n    const handleProblemNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateProblemNumber(event.target.value);\n    };\n\n    const handleDigitValueChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateNumberOfDigits(event.target.value);\n    };\n\n    const handleSheetNumberChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        updateSheetNumber(event.target.value as number);\n    };\n\n    const handleClickCreate = () => {\n        const generateProblems = (all: string[]) => {\n            const problems = generateMixedTimesDivide(digitValue, parseInt(problemValue, 10));\n            all = [...all, ...problems];\n            return all;\n        };\n        const allProblems: string[] = Array.from(Array(sheetNumber).keys()).reduce(generateProblems, []);\n        axios\n            .post(config.PDFGeneratorEndpoint, {\n                equations: allProblems,\n                template: problemDirection,\n                countPerPage: parseInt(problemValue, 10),\n            })\n            .then((resp) => {\n                window.open(resp.data);\n            });\n    };\n\n    return (\n        <>\n            <div className=\"mt-5\">\n                <ProblemNumber problemValue={problemValue} onProblemNumberChange={handleProblemNumberChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                <NumberOfDigits digitValue={digitValue} onDigitChange={handleDigitValueChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                <SheetSelect sheetValue={sheetNumber} onValueChange={handleSheetNumberChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                {' '}\n                <Button variant=\"contained\" color=\"primary\" onClick={handleClickCreate}>\n                    Create\n                </Button>\n            </div>\n        </>\n    );\n};\n\nconst mapStateToProps = (state: ApplicationState) => ({\n    problemValue: state.mixedTimesDivideData.problemNumber,\n    problemDirection: state.mixedTimesDivideData.problemDirection!,\n    digitValue: state.mixedTimesDivideData.digitNumber,\n    sheetNumber: state.mixedTimesDivideData.sheetNumber,\n});\n\nconst mapDispatchToProps = {\n    updateProblemNumber,\n    updateNumberOfDigits,\n    updateSheetNumber,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MixedTimesDividePage);\n","import MixedTimesDividePage from './MixedTiemsDivide';\nexport default MixedTimesDividePage;\n","import { generateMultiplication } from './multiplicationGenerator';\nimport { generateDivision } from './divisionGenerator';\nimport { getRandomIntFromInterval } from './common';\n\nexport const generateMixedTimesDivide = (digitValue: string, count: number): string[] => {\n    const multiplicationArr: string[] = generateMultiplication(digitValue, count);\n    const divisionArr: string[] = generateDivision(digitValue, count);\n    const all = [...multiplicationArr, ...divisionArr];\n    const result: string[] = [];\n    const set = new Set();\n    while (result.length < count && set.size < all.length) {\n        const p = getRandomIntFromInterval(0, all.length - 1);\n        if (!set.has(p)) {\n            set.add(p);\n            result.push(all[p]);\n        }\n    }\n\n    return result;\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ProblemNumber from '../../components/ProblemNumber';\nimport SheetSelect from '../../components/SheetSelect';\nimport { updateProblemNumber, updateNumberOfDigits, updateSheetNumber } from '../../actions/mixedTimesDivideMNActions';\nimport { typedAction } from '../../actions/types';\nimport { ApplicationState } from '../../reducers';\nimport { Direction } from '../../constants/directions';\nimport NumberOfDigits from '../../components/NumberOfDigits';\nimport Button from '@material-ui/core/Button';\nimport { generateMixedTimesDivideMN } from '../../utils/mixedTimesDivideMNGenerator';\nimport axios from 'axios';\nimport config from '../../config.json';\n\ninterface MixedTimesDivideMNPageProps {\n    problemValue: string;\n    problemDirection: Direction;\n    digitValue: string;\n    updateProblemNumber: (value: string) => typedAction;\n    updateProblemDirection: (value: Direction) => typedAction;\n    updateNumberOfDigits: (value: string) => typedAction;\n    sheetNumber: number;\n    updateSheetNumber: (value: number) => typedAction;\n}\n\nconst MixedTimesDivideMNPage: React.FC<MixedTimesDivideMNPageProps> = ({\n    problemValue,\n    problemDirection,\n    digitValue,\n    updateProblemNumber,\n    updateNumberOfDigits,\n    sheetNumber,\n    updateSheetNumber,\n}: MixedTimesDivideMNPageProps) => {\n    const handleProblemNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateProblemNumber(event.target.value);\n    };\n\n    const handleDigitValueChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateNumberOfDigits(event.target.value);\n    };\n\n    const handleSheetNumberChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        updateSheetNumber(event.target.value as number);\n    };\n\n    const handleClickCreate = () => {\n        const generateProblems = (all: string[]) => {\n            const problems = generateMixedTimesDivideMN(digitValue, parseInt(problemValue, 10));\n            all = [...all, ...problems];\n            return all;\n        };\n        const allProblems: string[] = Array.from(Array(sheetNumber).keys()).reduce(generateProblems, []);\n        axios\n            .post(config.PDFGeneratorEndpoint, {\n                equations: allProblems,\n                template: problemDirection,\n                countPerPage: parseInt(problemValue, 10),\n            })\n            .then((resp) => {\n                window.open(resp.data);\n            });\n    };\n\n    return (\n        <>\n            <div className=\"mt-5\">\n                <ProblemNumber problemValue={problemValue} onProblemNumberChange={handleProblemNumberChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                <NumberOfDigits digitValue={digitValue} onDigitChange={handleDigitValueChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                <SheetSelect sheetValue={sheetNumber} onValueChange={handleSheetNumberChange} />\n            </div>\n\n            <div className=\"mt-4\">\n                {' '}\n                <Button variant=\"contained\" color=\"primary\" onClick={handleClickCreate}>\n                    Create\n                </Button>\n            </div>\n        </>\n    );\n};\n\nconst mapStateToProps = (state: ApplicationState) => ({\n    problemValue: state.mixedTimesDivideMNData.problemNumber,\n    problemDirection: state.mixedTimesDivideMNData.problemDirection!,\n    digitValue: state.mixedTimesDivideMNData.digitNumber,\n    sheetNumber: state.mixedTimesDivideMNData.sheetNumber,\n});\n\nconst mapDispatchToProps = {\n    updateProblemNumber,\n    updateNumberOfDigits,\n    updateSheetNumber,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MixedTimesDivideMNPage);\n","import MixedTimesDivideMNPage from './MixedTimesDivideMN';\nexport default MixedTimesDivideMNPage;\n","import { generateMultiplicationMN } from './multiplicationMNGenerator';\nimport { generateDivisionMN } from './divisionMNGenerator';\nimport { getRandomIntFromInterval } from './common';\n\nexport const generateMixedTimesDivideMN = (digitValue: string, count: number): string[] => {\n    const multiplicationArr: string[] = generateMultiplicationMN(digitValue, count);\n    const divisionArr: string[] = generateDivisionMN(digitValue, count);\n    const all = [...multiplicationArr, ...divisionArr];\n    const result: string[] = [];\n    const set = new Set();\n    while (result.length < count && set.size < all.length) {\n        const p = getRandomIntFromInterval(0, all.length - 1);\n        if (!set.has(p)) {\n            set.add(p);\n            result.push(all[p]);\n        }\n    }\n\n    return result;\n};\n","import App from \"./App\";\nexport default App;\n","import React from 'react';\nimport { History } from 'history';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport { Container } from 'reactstrap';\nimport HomePage from '../HomePage';\nimport GreatThanLessThanPage from '../GreaterThanLessThan';\nimport AddThreeNumbersPage from '../AddThreeNumbers';\nimport AddMinusThreeNumbersPage from '../AddMinusThreeNumbers';\nimport MultiplicationPage from '../Multiplication';\nimport MultiplicationMNPage from '../MultiplicationMissingNumber';\nimport AdditionPage from '../Addition';\nimport AdditionMNPage from '../AdditionMissingNumber';\nimport SubtractionPage from '../Subtraction';\nimport SubtractionMNPage from '../SubtractionMissingNumber';\nimport Header from '../../components/Header';\nimport AddThreeMissingNumber from '../AddThreeMissingNumber';\nimport MixedAddMinusPage from '../MixedAddMinus';\nimport MixedAddMinusMNPage from '../MixedAddMinusMN';\nimport DivisionPage from '../Division';\nimport DivisionMNPage from '../DivisionMissingNumber';\nimport MixedTimesDividePage from '../MixedTimesDivide';\nimport MixedTimesDivideMNPage from '../MixedTimesDivideMN';\nimport './App.scss';\n\ninterface AppProps {\n    history: History;\n}\n\nconst App: React.FC<AppProps> = ({ history }: AppProps) => {\n    const handleClickLogo = () => {\n        history.push('/');\n    };\n\n    return (\n        <Container>\n            <Header onClickLogo={handleClickLogo} />\n            <Switch>\n                <Route exact path=\"/\" component={HomePage} />\n                <Route exact path=\"/greater_than_less_than\" component={GreatThanLessThanPage} />\n                <Route path=\"/add_three_numbers\" component={AddThreeNumbersPage} />\n                <Route path=\"/add_minus_three_numbers\" component={AddMinusThreeNumbersPage} />\n                <Route path=\"/add_three_numbers_mn\" component={AddThreeMissingNumber} />\n                <Route exact path=\"/multiplication\" component={MultiplicationPage} />\n                <Route exact path=\"/multiplicationmn\" component={MultiplicationMNPage} />\n                <Route exact path=\"/addition\" component={AdditionPage} />\n                <Route exact path=\"/additionmn\" component={AdditionMNPage} />\n                <Route exact path=\"/minus\" component={SubtractionPage} />\n                <Route exact path=\"/minusmn\" component={SubtractionMNPage} />\n                <Route exact path=\"/mixed_add_minus\" component={MixedAddMinusPage} />\n                <Route exact path=\"/mixed_add_minus_mn\" component={MixedAddMinusMNPage} />\n                <Route exact path=\"/division\" component={DivisionPage} />\n                <Route exact path=\"/division_mn\" component={DivisionMNPage} />\n                <Route exact path=\"/mixed_times_divide\" component={MixedTimesDividePage} />\n                <Route exact path=\"/mixed_times_divide_mn\" component={MixedTimesDivideMNPage} />\n            </Switch>\n        </Container>\n    );\n};\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Store } from \"redux\";\nimport { ApplicationState } from \"../reducers\";\n\nlet configureStore: (state?: ApplicationState) => Store<ApplicationState>;\n\nif (process.env.NODE_ENV === \"production\") {\n  configureStore = require(\"./configureStore.prod\").default;\n} else {\n  configureStore = require(\"./configureStore.dev\").default;\n}\n\nexport default configureStore;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.scss\";\nimport App from \"./containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport configureStore from \"./store/configureStore\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {\n    actionTypes as greaterThanLessThanActionTypes,\n    GreatThanlessThanActionsType,\n} from '../actions/greaterThanLessThanActions';\nimport { DigitTemplateState } from './types';\n\nconst initialState: DigitTemplateState = {\n    problemNumber: '10',\n    digitNumber: 'l20',\n    sheetNumber: 1,\n};\n\nconst greaterThanLessThanData = (state = initialState, action: GreatThanlessThanActionsType): DigitTemplateState => {\n    switch (action.type) {\n        case greaterThanLessThanActionTypes.UPDATE_PROBLEM_NUMBER_GL:\n            return {\n                ...state,\n                problemNumber: action.payload,\n            };\n        case greaterThanLessThanActionTypes.UPDATE_NUMBER_OF_DIGITS_GL:\n            return {\n                ...state,\n                digitNumber: action.payload,\n            };\n        case greaterThanLessThanActionTypes.UPDATE_SHEET_NUMBER_GL:\n            return {\n                ...state,\n                sheetNumber: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default greaterThanLessThanData;\n","import {\n    actionTypes as addThreeNumbersActionTypes,\n    AddThreeNumbersActionsType,\n} from '../actions/addThreeNumbersActions';\nimport { DigitTemplateState } from './types';\n\nconst initialState: DigitTemplateState = {\n    problemNumber: '20',\n    digitNumber: '1d',\n    sheetNumber: 1,\n};\n\nconst addThreeNumbersData = (state = initialState, action: AddThreeNumbersActionsType): DigitTemplateState => {\n    switch (action.type) {\n        case addThreeNumbersActionTypes.UPDATE_PROBLEM_NUMBER_ADDTHREE:\n            return {\n                ...state,\n                problemNumber: action.payload,\n            };\n        case addThreeNumbersActionTypes.UPDATE_NUMBER_OF_DIGITS_ADDTHREE:\n            return {\n                ...state,\n                digitNumber: action.payload,\n            };\n        case addThreeNumbersActionTypes.UPDATE_SHEET_NUMBER_ADDTHREE:\n            return {\n                ...state,\n                sheetNumber: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default addThreeNumbersData;\n","import {\n    actionTypes as addMinusThreeNumbersActionTypes,\n    AddMinusThreeNumbersActionsType,\n} from '../actions/addMinusThreeNumbersActions';\nimport { DigitTemplateState } from './types';\n\nconst initialState: DigitTemplateState = {\n    problemNumber: '20',\n    digitNumber: '1d',\n    sheetNumber: 1,\n};\n\nconst addMinusThreeNumbersData = (\n    state = initialState,\n    action: AddMinusThreeNumbersActionsType,\n): DigitTemplateState => {\n    switch (action.type) {\n        case addMinusThreeNumbersActionTypes.UPDATE_PROBLEM_NUMBER_ADDMINUSTHREE:\n            return {\n                ...state,\n                problemNumber: action.payload,\n            };\n        case addMinusThreeNumbersActionTypes.UPDATE_NUMBER_OF_DIGITS_ADDMINUSTHREE:\n            return {\n                ...state,\n                digitNumber: action.payload,\n            };\n        case addMinusThreeNumbersActionTypes.UPDATE_SHEET_NUMBER_ADDMINUSTHREE:\n            return {\n                ...state,\n                sheetNumber: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default addMinusThreeNumbersData;\n","import {\n    actionTypes as addThreeNumbersMNActionTypes,\n    AddThreeNumbersMNActionsType,\n} from '../actions/addThreeNumbersMNActions';\nimport { DigitTemplateState } from './types';\n\nconst initialState: DigitTemplateState = {\n    problemNumber: '20',\n    digitNumber: '1d',\n    sheetNumber: 1,\n};\n\nconst addThreeNumbersMNData = (state = initialState, action: AddThreeNumbersMNActionsType): DigitTemplateState => {\n    switch (action.type) {\n        case addThreeNumbersMNActionTypes.UPDATE_PROBLEM_NUMBER_ADDTHREE_MN:\n            return {\n                ...state,\n                problemNumber: action.payload,\n            };\n        case addThreeNumbersMNActionTypes.UPDATE_NUMBER_OF_DIGITS_ADDTHREE_MN:\n            return {\n                ...state,\n                digitNumber: action.payload,\n            };\n        case addThreeNumbersMNActionTypes.UPDATE_SHEET_NUMBER_ADDTHREE_MN:\n            return {\n                ...state,\n                sheetNumber: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default addThreeNumbersMNData;\n","import { actionTypes as multiplicationActionTypes, MultiplicationActionsType } from '../actions/multiplicationActions';\nimport { Direction } from '../constants/directions';\nimport { DigitTemplateState } from './types';\n\nconst initialState: DigitTemplateState = {\n    problemNumber: '20',\n    digitNumber: '1d',\n    problemDirection: Direction.VERTICAL,\n    sheetNumber: 1,\n};\n\nconst multiplicationData = (state = initialState, action: MultiplicationActionsType): DigitTemplateState => {\n    switch (action.type) {\n        case multiplicationActionTypes.UPDATE_PROBLEM_NUMBER_MULTIPLICATION:\n            return {\n                ...state,\n                problemNumber: action.payload,\n            };\n        case multiplicationActionTypes.UPDATE_PROBLEM_DIRECTION_MULTIPLICATION:\n            return {\n                ...state,\n                problemDirection: action.payload as Direction,\n            };\n        case multiplicationActionTypes.UPDATE_NUMBER_OF_DIGITS_MULTIPLICATION:\n            return {\n                ...state,\n                digitNumber: action.payload,\n            };\n        case multiplicationActionTypes.UPDATE_SHEET_NUMBER_MULTIPLICATION:\n            return {\n                ...state,\n                sheetNumber: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default multiplicationData;\n","import {\n    actionTypes as multiplicationMNActionTypes,\n    MultiplicationMNActionsType,\n} from '../actions/multiplicationMNActions';\nimport { Direction } from '../constants/directions';\nimport { DigitTemplateState } from './types';\n\nconst initialState: DigitTemplateState = {\n    problemNumber: '20',\n    digitNumber: '1d',\n    problemDirection: Direction.HORIZONTAL,\n    sheetNumber: 1,\n};\n\nconst multiplicationMNData = (state = initialState, action: MultiplicationMNActionsType): DigitTemplateState => {\n    switch (action.type) {\n        case multiplicationMNActionTypes.UPDATE_PROBLEM_NUMBER_MULTIPLICATION_MN:\n            return {\n                ...state,\n                problemNumber: action.payload,\n            };\n        case multiplicationMNActionTypes.UPDATE_NUMBER_OF_DIGITS_MULTIPLICATION_MN:\n            return {\n                ...state,\n                digitNumber: action.payload,\n            };\n        case multiplicationMNActionTypes.UPDATE_SHEET_NUMBER_MULTIPLICATION_MN:\n            return {\n                ...state,\n                sheetNumber: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default multiplicationMNData;\n","import { LOWER_RANGE, UPPER_RANGE } from '../constants/ranges';\n\nexport const getFormValueError = (fromValue: string, toValue: string): boolean => {\n    if (!fromValue) {\n        return true;\n    }\n    const vint = parseInt(fromValue, 10);\n    const toint = parseInt(toValue, 10);\n    return vint < LOWER_RANGE || vint > UPPER_RANGE || vint >= toint;\n};\n\nexport const getToValueError = (fromValue: string, toValue: string): boolean => {\n    if (!toValue) {\n        return true;\n    }\n\n    const vint = parseInt(toValue, 10);\n    const fromint = parseInt(fromValue, 10);\n    return vint < LOWER_RANGE || vint > UPPER_RANGE || vint <= fromint;\n};\n","import { actionTypes as addtionActionTypes, AdditionActionsType } from '../actions/additionActions';\nimport { CheckBoxType } from '../actions/types';\nimport { Direction } from '../constants/directions';\nimport { RangeTemplateState } from './types';\nimport { getFormValueError, getToValueError } from './common';\n\nconst initialState: RangeTemplateState = {\n    problemNumber: '20',\n    problemDirection: Direction.VERTICAL,\n    fromValue: '0',\n    toValue: '20',\n    isFromValueError: false,\n    isToValueError: false,\n    restrictionsChecked: [],\n    sheetNumber: 1,\n};\n\nconst updateRestrictions = (state: RangeTemplateState, checkboxName: string, value: boolean): RangeTemplateState => {\n    const stateCopy = { ...state };\n    if (value) {\n        stateCopy.restrictionsChecked = stateCopy.restrictionsChecked.slice();\n        stateCopy.restrictionsChecked.push(checkboxName);\n    } else {\n        stateCopy.restrictionsChecked = stateCopy.restrictionsChecked.filter((item) => {\n            if (checkboxName === item) {\n                return false;\n            }\n\n            return true;\n        });\n    }\n    return stateCopy;\n};\n\nconst additionData = (state = initialState, action: AdditionActionsType): RangeTemplateState => {\n    switch (action.type) {\n        case addtionActionTypes.UPDATE_PROBLEM_ADDITION:\n            return {\n                ...state,\n                problemNumber: action.payload as string,\n            };\n        case addtionActionTypes.UPDATE_PROBLEM_DIRECTION_ADDITION:\n            return {\n                ...state,\n                problemDirection: action.payload as Direction,\n            };\n        case addtionActionTypes.UPDATE_FROM_VALUE_ADDITION:\n            return {\n                ...state,\n                fromValue: action.payload as string,\n                isFromValueError: getFormValueError(action.payload as string, state.toValue),\n                isToValueError: getToValueError(action.payload as string, state.toValue),\n            };\n        case addtionActionTypes.UPDATE_TO_VALUE_ADDITION:\n            return {\n                ...state,\n                toValue: action.payload as string,\n                isFromValueError: getFormValueError(state.fromValue, action.payload as string),\n                isToValueError: getToValueError(state.fromValue, action.payload as string),\n            };\n        case addtionActionTypes.UPDATE_RESTRICTION_ADDITION:\n            const p: CheckBoxType = action.payload as CheckBoxType;\n            return updateRestrictions(state, p.checkboxName, p.value);\n        case addtionActionTypes.UPDATE_SHEET_NUMBER_ADDITION:\n            return {\n                ...state,\n                sheetNumber: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default additionData;\n","import { actionTypes as addtionMNActionTypes, AdditionMNActionsType } from '../actions/additionMNActions';\nimport { CheckBoxType } from '../actions/types';\nimport { RangeTemplateState } from './types';\nimport { Direction } from '../constants/directions';\nimport { getFormValueError, getToValueError } from './common';\n\nconst initialState: RangeTemplateState = {\n    problemNumber: '20',\n    problemDirection: Direction.HORIZONTAL,\n    fromValue: '0',\n    toValue: '20',\n    isFromValueError: false,\n    isToValueError: false,\n    restrictionsChecked: [],\n    sheetNumber: 1,\n};\n\nconst updateRestrictions = (state: RangeTemplateState, checkboxName: string, value: boolean): RangeTemplateState => {\n    const stateCopy = { ...state };\n    if (value) {\n        stateCopy.restrictionsChecked = stateCopy.restrictionsChecked.slice();\n        stateCopy.restrictionsChecked.push(checkboxName);\n    } else {\n        stateCopy.restrictionsChecked = stateCopy.restrictionsChecked.filter((item) => {\n            if (checkboxName === item) {\n                return false;\n            }\n\n            return true;\n        });\n    }\n    return stateCopy;\n};\n\nconst additionMNData = (state = initialState, action: AdditionMNActionsType): RangeTemplateState => {\n    switch (action.type) {\n        case addtionMNActionTypes.UPDATE_PROBLEM_ADDITION_MN:\n            return {\n                ...state,\n                problemNumber: action.payload as string,\n            };\n        case addtionMNActionTypes.UPDATE_FROM_VALUE_ADDITION_MN:\n            return {\n                ...state,\n                fromValue: action.payload as string,\n                isFromValueError: getFormValueError(action.payload as string, state.toValue),\n                isToValueError: getToValueError(action.payload as string, state.toValue),\n            };\n        case addtionMNActionTypes.UPDATE_TO_VALUE_ADDITION_MN:\n            return {\n                ...state,\n                toValue: action.payload as string,\n                isFromValueError: getFormValueError(state.fromValue, action.payload as string),\n                isToValueError: getToValueError(state.fromValue, action.payload as string),\n            };\n        case addtionMNActionTypes.UPDATE_RESTRICTION_ADDITION_MN:\n            const p: CheckBoxType = action.payload as CheckBoxType;\n            return updateRestrictions(state, p.checkboxName, p.value);\n        case addtionMNActionTypes.UPDATE_SHEET_NUMBER_ADDITION_MN:\n            return {\n                ...state,\n                sheetNumber: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default additionMNData;\n","import { actionTypes as subtractionActionTypes, SubtractionActionsType } from '../actions/subtractionActions';\nimport { CheckBoxType } from '../actions/types';\nimport { RangeTemplateState } from './types';\nimport { Direction } from '../constants/directions';\nimport { getFormValueError, getToValueError } from './common';\n\nconst initialState: RangeTemplateState = {\n    problemNumber: '20',\n    problemDirection: Direction.VERTICAL,\n    fromValue: '0',\n    toValue: '20',\n    isFromValueError: false,\n    isToValueError: false,\n    restrictionsChecked: [],\n    sheetNumber: 1,\n};\n\nconst updateRestrictions = (state: RangeTemplateState, checkboxName: string, value: boolean): RangeTemplateState => {\n    const stateCopy = { ...state };\n    if (value) {\n        stateCopy.restrictionsChecked = stateCopy.restrictionsChecked.slice();\n        stateCopy.restrictionsChecked.push(checkboxName);\n    } else {\n        stateCopy.restrictionsChecked = stateCopy.restrictionsChecked.filter((item) => {\n            if (checkboxName === item) {\n                return false;\n            }\n\n            return true;\n        });\n    }\n    return stateCopy;\n};\n\nconst subtractionData = (state = initialState, action: SubtractionActionsType): RangeTemplateState => {\n    switch (action.type) {\n        case subtractionActionTypes.UPDATE_PROBLEM_SUBTRACTION:\n            return {\n                ...state,\n                problemNumber: action.payload as string,\n            };\n        case subtractionActionTypes.UPDATE_PROBLEM_DIRECTION_SUBTRACTION:\n            return {\n                ...state,\n                problemDirection: action.payload as Direction,\n            };\n        case subtractionActionTypes.UPDATE_FROM_VALUE_SUBTRACTION:\n            return {\n                ...state,\n                fromValue: action.payload as string,\n                isFromValueError: getFormValueError(action.payload as string, state.toValue),\n                isToValueError: getToValueError(action.payload as string, state.toValue),\n            };\n        case subtractionActionTypes.UPDATE_TO_VALUE_SUBTRACTION:\n            return {\n                ...state,\n                toValue: action.payload as string,\n                isFromValueError: getFormValueError(state.fromValue, action.payload as string),\n                isToValueError: getToValueError(state.fromValue, action.payload as string),\n            };\n        case subtractionActionTypes.UPDATE_RESTRICTION_SUBTRACTION:\n            const p: CheckBoxType = action.payload as CheckBoxType;\n            return updateRestrictions(state, p.checkboxName, p.value);\n        case subtractionActionTypes.UPDATE_SHEET_NUMBER_SUBTRACTION:\n            return {\n                ...state,\n                sheetNumber: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default subtractionData;\n","import { actionTypes as subtractionMNActionTypes, SubtractionMNActionsType } from '../actions/subtractionMNActions';\nimport { CheckBoxType } from '../actions/types';\nimport { RangeTemplateState } from './types';\nimport { Direction } from '../constants/directions';\nimport { getFormValueError, getToValueError } from './common';\n\nconst initialState: RangeTemplateState = {\n    problemNumber: '20',\n    problemDirection: Direction.HORIZONTAL,\n    fromValue: '0',\n    toValue: '20',\n    isFromValueError: false,\n    isToValueError: false,\n    restrictionsChecked: [],\n    sheetNumber: 1,\n};\n\nconst updateRestrictions = (state: RangeTemplateState, checkboxName: string, value: boolean): RangeTemplateState => {\n    const stateCopy = { ...state };\n    if (value) {\n        stateCopy.restrictionsChecked = stateCopy.restrictionsChecked.slice();\n        stateCopy.restrictionsChecked.push(checkboxName);\n    } else {\n        stateCopy.restrictionsChecked = stateCopy.restrictionsChecked.filter((item) => {\n            if (checkboxName === item) {\n                return false;\n            }\n\n            return true;\n        });\n    }\n    return stateCopy;\n};\n\nconst subtractionMNData = (state = initialState, action: SubtractionMNActionsType): RangeTemplateState => {\n    switch (action.type) {\n        case subtractionMNActionTypes.UPDATE_PROBLEM_SUBTRACTION_MN:\n            return {\n                ...state,\n                problemNumber: action.payload as string,\n            };\n        case subtractionMNActionTypes.UPDATE_FROM_VALUE_SUBTRACTION_MN:\n            return {\n                ...state,\n                fromValue: action.payload as string,\n                isFromValueError: getFormValueError(action.payload as string, state.toValue),\n                isToValueError: getToValueError(action.payload as string, state.toValue),\n            };\n        case subtractionMNActionTypes.UPDATE_TO_VALUE_SUBTRACTION_MN:\n            return {\n                ...state,\n                toValue: action.payload as string,\n                isFromValueError: getFormValueError(action.payload as string, state.toValue),\n                isToValueError: getToValueError(action.payload as string, state.toValue),\n            };\n        case subtractionMNActionTypes.UPDATE_RESTRICTION_SUBTRACTION_MN:\n            const p: CheckBoxType = action.payload as CheckBoxType;\n            return updateRestrictions(state, p.checkboxName, p.value);\n        case subtractionMNActionTypes.UPDATE_SHEET_NUMBER_SUBTRACTION_MN:\n            return {\n                ...state,\n                sheetNumber: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default subtractionMNData;\n","import { actionTypes as mixedAddMinusActionTypes, MixedAddMinusActionsType } from '../actions/mixedAddMinusActions';\nimport { CheckBoxType } from '../actions/types';\nimport { Direction } from '../constants/directions';\nimport { RangeTemplateState } from './types';\nimport { getFormValueError, getToValueError } from './common';\n\nconst initialState: RangeTemplateState = {\n    problemNumber: '20',\n    problemDirection: Direction.VERTICAL,\n    fromValue: '0',\n    toValue: '20',\n    isFromValueError: false,\n    isToValueError: false,\n    restrictionsChecked: [],\n    sheetNumber: 1,\n};\n\nconst updateRestrictions = (state: RangeTemplateState, checkboxName: string, value: boolean): RangeTemplateState => {\n    const stateCopy = { ...state };\n    if (value) {\n        stateCopy.restrictionsChecked = stateCopy.restrictionsChecked.slice();\n        stateCopy.restrictionsChecked.push(checkboxName);\n    } else {\n        stateCopy.restrictionsChecked = stateCopy.restrictionsChecked.filter((item) => {\n            if (checkboxName === item) {\n                return false;\n            }\n\n            return true;\n        });\n    }\n    return stateCopy;\n};\n\nconst mixedAddMinusData = (state = initialState, action: MixedAddMinusActionsType): RangeTemplateState => {\n    switch (action.type) {\n        case mixedAddMinusActionTypes.UPDATE_PROBLEM_ADDMINUS:\n            return {\n                ...state,\n                problemNumber: action.payload as string,\n            };\n        case mixedAddMinusActionTypes.UPDATE_PROBLEM_DIRECTION_ADDMINUS:\n            return {\n                ...state,\n                problemDirection: action.payload as Direction,\n            };\n        case mixedAddMinusActionTypes.UPDATE_FROM_VALUE_ADDMINUS:\n            return {\n                ...state,\n                fromValue: action.payload as string,\n                isFromValueError: getFormValueError(action.payload as string, state.toValue),\n                isToValueError: getToValueError(action.payload as string, state.toValue),\n            };\n        case mixedAddMinusActionTypes.UPDATE_TO_VALUE_ADDMINUS:\n            return {\n                ...state,\n                toValue: action.payload as string,\n                isFromValueError: getFormValueError(state.fromValue, action.payload as string),\n                isToValueError: getToValueError(state.fromValue, action.payload as string),\n            };\n        case mixedAddMinusActionTypes.UPDATE_RESTRICTION_ADDMINUS:\n            const p: CheckBoxType = action.payload as CheckBoxType;\n            return updateRestrictions(state, p.checkboxName, p.value);\n        case mixedAddMinusActionTypes.UPDATE_SHEET_NUMBER_ADDMINUS:\n            return {\n                ...state,\n                sheetNumber: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default mixedAddMinusData;\n","import {\n    actionTypes as mixedAddMinusMNActionTypes,\n    MixedAddMinusMNActionsType,\n} from '../actions/mixedAddMinusMNActions';\nimport { CheckBoxType } from '../actions/types';\nimport { Direction } from '../constants/directions';\nimport { RangeTemplateState } from './types';\nimport { getFormValueError, getToValueError } from './common';\n\nconst initialState: RangeTemplateState = {\n    problemNumber: '20',\n    problemDirection: Direction.HORIZONTAL,\n    fromValue: '0',\n    toValue: '20',\n    isFromValueError: false,\n    isToValueError: false,\n    restrictionsChecked: [],\n    sheetNumber: 1,\n};\n\nconst updateRestrictions = (state: RangeTemplateState, checkboxName: string, value: boolean): RangeTemplateState => {\n    const stateCopy = { ...state };\n    if (value) {\n        stateCopy.restrictionsChecked = stateCopy.restrictionsChecked.slice();\n        stateCopy.restrictionsChecked.push(checkboxName);\n    } else {\n        stateCopy.restrictionsChecked = stateCopy.restrictionsChecked.filter((item) => {\n            if (checkboxName === item) {\n                return false;\n            }\n\n            return true;\n        });\n    }\n    return stateCopy;\n};\n\nconst mixedAddMinusMNData = (state = initialState, action: MixedAddMinusMNActionsType): RangeTemplateState => {\n    switch (action.type) {\n        case mixedAddMinusMNActionTypes.UPDATE_PROBLEM_ADDMINUS_MN:\n            return {\n                ...state,\n                problemNumber: action.payload as string,\n            };\n        case mixedAddMinusMNActionTypes.UPDATE_PROBLEM_DIRECTION_ADDMINUS_MN:\n            return {\n                ...state,\n                problemDirection: action.payload as Direction,\n            };\n        case mixedAddMinusMNActionTypes.UPDATE_FROM_VALUE_ADDMINUS_MN:\n            return {\n                ...state,\n                fromValue: action.payload as string,\n                isFromValueError: getFormValueError(action.payload as string, state.toValue),\n                isToValueError: getToValueError(action.payload as string, state.toValue),\n            };\n        case mixedAddMinusMNActionTypes.UPDATE_TO_VALUE_ADDMINUS_MN:\n            return {\n                ...state,\n                toValue: action.payload as string,\n                isFromValueError: getFormValueError(state.fromValue, action.payload as string),\n                isToValueError: getToValueError(state.fromValue, action.payload as string),\n            };\n        case mixedAddMinusMNActionTypes.UPDATE_RESTRICTION_ADDMINUS_MN:\n            const p: CheckBoxType = action.payload as CheckBoxType;\n            return updateRestrictions(state, p.checkboxName, p.value);\n        case mixedAddMinusMNActionTypes.UPDATE_SHEET_NUMBER_ADDMINUS_MN:\n            return {\n                ...state,\n                sheetNumber: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default mixedAddMinusMNData;\n","import { actionTypes as divisionActionTypes, DivisionActionsType } from '../actions/divisionActions';\nimport { Direction } from '../constants/directions';\nimport { DigitTemplateState } from './types';\n\nconst initialState: DigitTemplateState = {\n    problemNumber: '20',\n    digitNumber: '1d',\n    problemDirection: Direction.HORIZONTAL,\n    sheetNumber: 1,\n};\n\nconst divisionData = (state = initialState, action: DivisionActionsType): DigitTemplateState => {\n    switch (action.type) {\n        case divisionActionTypes.UPDATE_PROBLEM_NUMBER_DIVISION:\n            return {\n                ...state,\n                problemNumber: action.payload,\n            };\n        case divisionActionTypes.UPDATE_PROBLEM_DIRECTION_DIVISION:\n            return {\n                ...state,\n                problemDirection: action.payload as Direction,\n            };\n        case divisionActionTypes.UPDATE_NUMBER_OF_DIGITS_DIVISION:\n            return {\n                ...state,\n                digitNumber: action.payload,\n            };\n        case divisionActionTypes.UPDATE_SHEET_NUMBER_DIVISION:\n            return {\n                ...state,\n                sheetNumber: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default divisionData;\n","import { actionTypes as divisionMNActionTypes, DivisionMNActionsType } from '../actions/divisionMNActions';\nimport { Direction } from '../constants/directions';\nimport { DigitTemplateState } from './types';\n\nconst initialState: DigitTemplateState = {\n    problemNumber: '20',\n    digitNumber: '1d',\n    problemDirection: Direction.HORIZONTAL,\n    sheetNumber: 1,\n};\n\nconst divisionMNData = (state = initialState, action: DivisionMNActionsType): DigitTemplateState => {\n    switch (action.type) {\n        case divisionMNActionTypes.UPDATE_PROBLEM_NUMBER_DIVISION_MN:\n            return {\n                ...state,\n                problemNumber: action.payload,\n            };\n        case divisionMNActionTypes.UPDATE_NUMBER_OF_DIGITS_DIVISION_MN:\n            return {\n                ...state,\n                digitNumber: action.payload,\n            };\n        case divisionMNActionTypes.UPDATE_SHEET_NUMBER_DIVISION_MN:\n            return {\n                ...state,\n                sheetNumber: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default divisionMNData;\n","import {\n    actionTypes as mixedTimesDivideActionTypes,\n    MixedTimesDivideActionsType,\n} from '../actions/mixedTimesDivideActions';\nimport { Direction } from '../constants/directions';\nimport { DigitTemplateState } from './types';\n\nconst initialState: DigitTemplateState = {\n    problemNumber: '20',\n    digitNumber: '1d',\n    problemDirection: Direction.HORIZONTAL,\n    sheetNumber: 1,\n};\n\nconst mixedTimesDivideData = (state = initialState, action: MixedTimesDivideActionsType): DigitTemplateState => {\n    switch (action.type) {\n        case mixedTimesDivideActionTypes.UPDATE_PROBLEM_NUMBER_TIMESDIVIDE:\n            return {\n                ...state,\n                problemNumber: action.payload,\n            };\n        case mixedTimesDivideActionTypes.UPDATE_PROBLEM_DIRECTION_TIMESDIVIDE:\n            return {\n                ...state,\n                problemDirection: action.payload as Direction,\n            };\n        case mixedTimesDivideActionTypes.UPDATE_NUMBER_OF_DIGITS_TIMESDIVIDE:\n            return {\n                ...state,\n                digitNumber: action.payload,\n            };\n        case mixedTimesDivideActionTypes.UPDATE_SHEET_NUMBER_TIMESDIVIDE:\n            return {\n                ...state,\n                sheetNumber: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default mixedTimesDivideData;\n","import {\n    actionTypes as mixedTimesDivideMNActionTypes,\n    MixedTimesDivideMNActionsType,\n} from '../actions/mixedTimesDivideMNActions';\nimport { Direction } from '../constants/directions';\nimport { DigitTemplateState } from './types';\n\nconst initialState: DigitTemplateState = {\n    problemNumber: '20',\n    digitNumber: '1d',\n    problemDirection: Direction.HORIZONTAL,\n    sheetNumber: 1,\n};\n\nconst mixedTimesDivideMNData = (state = initialState, action: MixedTimesDivideMNActionsType): DigitTemplateState => {\n    switch (action.type) {\n        case mixedTimesDivideMNActionTypes.UPDATE_PROBLEM_NUMBER_TIMESDIVIDE_MN:\n            return {\n                ...state,\n                problemNumber: action.payload,\n            };\n        case mixedTimesDivideMNActionTypes.UPDATE_PROBLEM_DIRECTION_TIMESDIVIDE_MN:\n            return {\n                ...state,\n                problemDirection: action.payload as Direction,\n            };\n        case mixedTimesDivideMNActionTypes.UPDATE_NUMBER_OF_DIGITS_TIMESDIVIDE_MN:\n            return {\n                ...state,\n                digitNumber: action.payload,\n            };\n        case mixedTimesDivideMNActionTypes.UPDATE_SHEET_NUMBER_TIMESDIVIDE_MN:\n            return {\n                ...state,\n                sheetNumber: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default mixedTimesDivideMNData;\n","import { combineReducers } from 'redux';\nimport greaterThanLessThanData from './greaterThanLessThanReducer';\nimport addThreeNumbersData from './addThreeNumbersReducer';\nimport addMinusThreeNumbersData from './addMinusThreeNumbersReducer';\nimport addThreeNumbersMNData from './addThreeNumbersMNReducer';\nimport multiplicationData from './multiplicationReducer';\nimport multiplicationMNData from './multiplicationMNReducer';\nimport additionData from './additionReducer';\nimport additionMNData from './additionMNReducer';\nimport subtractionData from './subtractionReducer';\nimport subtractionMNData from './subtractionMNReducer';\nimport mixedAddMinusData from './mixedAddMinusReducer';\nimport mixedAddMinusMNData from './mixedAddMinusMNReducer';\nimport divisionData from './divisionReducer';\nimport divisionMNData from './divisionMNReducer';\nimport mixedTimesDivideData from './mixedTimesDivideReducer';\nimport mixedTimesDivideMNData from './mixedTimesDivideMNReducer';\n\nconst reducers = combineReducers({\n    greaterThanLessThanData,\n    addThreeNumbersData,\n    addMinusThreeNumbersData,\n    addThreeNumbersMNData,\n    multiplicationData,\n    multiplicationMNData,\n    additionData,\n    additionMNData,\n    subtractionData,\n    subtractionMNData,\n    mixedAddMinusData,\n    mixedAddMinusMNData,\n    divisionData,\n    divisionMNData,\n    mixedTimesDivideData,\n    mixedTimesDivideMNData,\n});\n\nexport type ApplicationState = ReturnType<typeof reducers>;\nconsole.log('ApplicationState', typeof reducers);\n\nexport default reducers;\n","import { createStore, applyMiddleware, Store } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"../reducers\";\nimport { ApplicationState } from \"../reducers\";\n\nconst configureStore = (\n  preloadState?: ApplicationState\n): Store<ApplicationState> =>\n  createStore(reducers, preloadState, applyMiddleware(thunk));\n\nexport default configureStore;\n","export const LOWER_RANGE = 0;\nexport const UPPER_RANGE = 10000;\n","import { typedAction, CheckBoxType } from './types';\nimport { Direction } from '../constants/directions';\n\nexport const actionTypes = {\n    UPDATE_PROBLEM_ADDITION: 'UPDATE_PROBLEM_ADDITION',\n    UPDATE_PROBLEM_DIRECTION_ADDITION: 'UPDATE_PROBLEM_DIRECTION_ADDITION',\n    UPDATE_FROM_VALUE_ADDITION: 'UPDATE_FROM_VALUE_ADDITION',\n    UPDATE_TO_VALUE_ADDITION: 'UPDATE_TO_VALUE_ADDITION',\n    UPDATE_RESTRICTION_ADDITION: 'UPDATE_RESTRICTION_ADDITION',\n    UPDATE_SHEET_NUMBER_ADDITION: 'UPDATE_SHEET_NUMBER_ADDITION',\n};\n\nexport const updateProblemNumber = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_PROBLEM_ADDITION,\n    payload: value,\n});\n\nexport const updateProblemDirection = (value: Direction): typedAction => ({\n    type: actionTypes.UPDATE_PROBLEM_DIRECTION_ADDITION,\n    payload: value,\n});\n\nexport const updateFromValue = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_FROM_VALUE_ADDITION,\n    payload: value,\n});\n\nexport const updateToValue = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_TO_VALUE_ADDITION,\n    payload: value,\n});\n\nexport const updateRestrictions = (checkboxName: string, value: boolean): typedAction => {\n    const payload: CheckBoxType = { checkboxName, value };\n    return { type: actionTypes.UPDATE_RESTRICTION_ADDITION, payload };\n};\n\nexport const updateSheetNumber = (value: number): typedAction => ({\n    type: actionTypes.UPDATE_SHEET_NUMBER_ADDITION,\n    payload: value,\n});\n\nexport type AdditionActionsType = ReturnType<\n    | typeof updateProblemNumber\n    | typeof updateProblemDirection\n    | typeof updateFromValue\n    | typeof updateFromValue\n    | typeof updateToValue\n    | typeof updateRestrictions\n    | typeof updateSheetNumber\n>;\n","import { typedAction, CheckBoxType } from './types';\nimport { Direction } from '../constants/directions';\n\nexport const actionTypes = {\n    UPDATE_PROBLEM_SUBTRACTION: 'UPDATE_PROBLEM_SUBTRACTION',\n    UPDATE_PROBLEM_DIRECTION_SUBTRACTION: 'UPDATE_PROBLEM_DIRECTION_SUBTRACTION',\n    UPDATE_FROM_VALUE_SUBTRACTION: 'UPDATE_FROM_VALUE_SUBTRACTION',\n    UPDATE_TO_VALUE_SUBTRACTION: 'UPDATE_TO_VALUE_SUBTRACTION',\n    UPDATE_RESTRICTION_SUBTRACTION: 'UPDATE_RESTRICTION_SUBTRACTION',\n    UPDATE_SHEET_NUMBER_SUBTRACTION: 'UPDATE_SHEET_NUMBER_SUBTRACTION',\n};\n\nexport const updateProblemNumber = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_PROBLEM_SUBTRACTION,\n    payload: value,\n});\n\nexport const updateProblemDirection = (value: Direction): typedAction => ({\n    type: actionTypes.UPDATE_PROBLEM_DIRECTION_SUBTRACTION,\n    payload: value,\n});\n\nexport const updateFromValue = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_FROM_VALUE_SUBTRACTION,\n    payload: value,\n});\n\nexport const updateToValue = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_TO_VALUE_SUBTRACTION,\n    payload: value,\n});\n\nexport const updateRestrictions = (checkboxName: string, value: boolean): typedAction => {\n    const payload: CheckBoxType = {\n        checkboxName,\n        value,\n    };\n    return { type: actionTypes.UPDATE_RESTRICTION_SUBTRACTION, payload };\n};\n\nexport const updateSheetNumber = (value: number): typedAction => ({\n    type: actionTypes.UPDATE_SHEET_NUMBER_SUBTRACTION,\n    payload: value,\n});\n\nexport type SubtractionActionsType = ReturnType<\n    | typeof updateProblemNumber\n    | typeof updateProblemDirection\n    | typeof updateFromValue\n    | typeof updateToValue\n    | typeof updateRestrictions\n    | typeof updateSheetNumber\n>;\n","import { typedAction, CheckBoxType } from './types';\nimport { Direction } from '../constants/directions';\n\nexport const actionTypes = {\n    UPDATE_PROBLEM_ADDMINUS: 'UPDATE_PROBLEM_ADDMINUS',\n    UPDATE_PROBLEM_DIRECTION_ADDMINUS: 'UPDATE_PROBLEM_DIRECTION_ADDMINUS',\n    UPDATE_FROM_VALUE_ADDMINUS: 'UPDATE_FROM_VALUE_ADDMINUS',\n    UPDATE_TO_VALUE_ADDMINUS: 'UPDATE_TO_VALUE_ADDMINUS',\n    UPDATE_RESTRICTION_ADDMINUS: 'UPDATE_RESTRICTION_ADDMINUS',\n    UPDATE_SHEET_NUMBER_ADDMINUS: 'UPDATE_SHEET_NUMBER_ADDMINUS',\n};\n\nexport const updateProblemNumber = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_PROBLEM_ADDMINUS,\n    payload: value,\n});\n\nexport const updateProblemDirection = (value: Direction): typedAction => ({\n    type: actionTypes.UPDATE_PROBLEM_DIRECTION_ADDMINUS,\n    payload: value,\n});\n\nexport const updateFromValue = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_FROM_VALUE_ADDMINUS,\n    payload: value,\n});\n\nexport const updateToValue = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_TO_VALUE_ADDMINUS,\n    payload: value,\n});\n\nexport const updateRestrictions = (checkboxName: string, value: boolean): typedAction => {\n    const payload: CheckBoxType = { checkboxName, value };\n    return { type: actionTypes.UPDATE_RESTRICTION_ADDMINUS, payload };\n};\n\nexport const updateSheetNumber = (value: number): typedAction => ({\n    type: actionTypes.UPDATE_SHEET_NUMBER_ADDMINUS,\n    payload: value,\n});\n\nexport type MixedAddMinusActionsType = ReturnType<\n    | typeof updateProblemNumber\n    | typeof updateProblemDirection\n    | typeof updateFromValue\n    | typeof updateFromValue\n    | typeof updateToValue\n    | typeof updateRestrictions\n    | typeof updateSheetNumber\n>;\n","import { typedAction, CheckBoxType } from './types';\n\nexport const actionTypes = {\n    UPDATE_PROBLEM_ADDMINUS_MN: 'UPDATE_PROBLEM_ADDMINUS_MN',\n    UPDATE_PROBLEM_DIRECTION_ADDMINUS_MN: 'UPDATE_PROBLEM_DIRECTION_ADDMINUS_MN',\n    UPDATE_FROM_VALUE_ADDMINUS_MN: 'UPDATE_FROM_VALUE_ADDMINUS_MN',\n    UPDATE_TO_VALUE_ADDMINUS_MN: 'UPDATE_TO_VALUE_ADDMINUS_MN',\n    UPDATE_RESTRICTION_ADDMINUS_MN: 'UPDATE_RESTRICTION_ADDMINUS_MN',\n    UPDATE_SHEET_NUMBER_ADDMINUS_MN: 'UPDATE_SHEET_NUMBER_ADDMINUS_MN',\n};\n\nexport const updateProblemNumber = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_PROBLEM_ADDMINUS_MN,\n    payload: value,\n});\n\nexport const updateFromValue = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_FROM_VALUE_ADDMINUS_MN,\n    payload: value,\n});\n\nexport const updateToValue = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_TO_VALUE_ADDMINUS_MN,\n    payload: value,\n});\n\nexport const updateRestrictions = (checkboxName: string, value: boolean): typedAction => {\n    const payload: CheckBoxType = { checkboxName, value };\n    return { type: actionTypes.UPDATE_RESTRICTION_ADDMINUS_MN, payload };\n};\n\nexport const updateSheetNumber = (value: number): typedAction => ({\n    type: actionTypes.UPDATE_SHEET_NUMBER_ADDMINUS_MN,\n    payload: value,\n});\n\nexport type MixedAddMinusMNActionsType = ReturnType<\n    | typeof updateProblemNumber\n    | typeof updateFromValue\n    | typeof updateFromValue\n    | typeof updateToValue\n    | typeof updateRestrictions\n    | typeof updateSheetNumber\n>;\n","import { typedAction, CheckBoxType } from './types';\n\nexport const actionTypes = {\n    UPDATE_PROBLEM_ADDITION_MN: 'UPDATE_PROBLEM_ADDITION_MN',\n    UPDATE_FROM_VALUE_ADDITION_MN: 'UPDATE_FROM_VALUE_ADDITION_MN',\n    UPDATE_TO_VALUE_ADDITION_MN: 'UPDATE_TO_VALUE_ADDITION_MN',\n    UPDATE_RESTRICTION_ADDITION_MN: 'UPDATE_RESTRICTION_ADDITION_MN',\n    UPDATE_SHEET_NUMBER_ADDITION_MN: 'UPDATE_SHEET_NUMBER_ADDITION_MN',\n};\n\nexport const updateProblemNumber = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_PROBLEM_ADDITION_MN,\n    payload: value,\n});\n\nexport const updateFromValue = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_FROM_VALUE_ADDITION_MN,\n    payload: value,\n});\n\nexport const updateToValue = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_TO_VALUE_ADDITION_MN,\n    payload: value,\n});\n\nexport const updateRestrictions = (checkboxName: string, value: boolean): typedAction => {\n    const payload: CheckBoxType = {\n        checkboxName,\n        value,\n    };\n    return { type: actionTypes.UPDATE_RESTRICTION_ADDITION_MN, payload };\n};\n\nexport const updateSheetNumber = (value: number): typedAction => ({\n    type: actionTypes.UPDATE_SHEET_NUMBER_ADDITION_MN,\n    payload: value,\n});\n\nexport type AdditionMNActionsType = ReturnType<\n    | typeof updateProblemNumber\n    | typeof updateFromValue\n    | typeof updateToValue\n    | typeof updateRestrictions\n    | typeof updateSheetNumber\n>;\n","import { typedAction, CheckBoxType } from './types';\n\nexport const actionTypes = {\n    UPDATE_PROBLEM_SUBTRACTION_MN: 'UPDATE_PROBLEM_SUBTRACTION_MN',\n    UPDATE_FROM_VALUE_SUBTRACTION_MN: 'UPDATE_FROM_VALUE_SUBTRACTION_MN',\n    UPDATE_TO_VALUE_SUBTRACTION_MN: 'UPDATE_TO_VALUE_SUBTRACTION_MN',\n    UPDATE_RESTRICTION_SUBTRACTION_MN: 'UPDATE_RESTRICTION_SUBTRACTION_MN',\n    UPDATE_SHEET_NUMBER_SUBTRACTION_MN: 'UPDATE_SHEET_NUMBER_SUBTRACTION_MN',\n};\n\nexport const updateProblemNumber = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_PROBLEM_SUBTRACTION_MN,\n    payload: value,\n});\n\nexport const updateFromValue = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_FROM_VALUE_SUBTRACTION_MN,\n    payload: value,\n});\n\nexport const updateToValue = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_TO_VALUE_SUBTRACTION_MN,\n    payload: value,\n});\n\nexport const updateRestrictions = (checkboxName: string, value: boolean): typedAction => {\n    const payload: CheckBoxType = {\n        checkboxName,\n        value,\n    };\n    return { type: actionTypes.UPDATE_RESTRICTION_SUBTRACTION_MN, payload };\n};\n\nexport const updateSheetNumber = (value: number): typedAction => ({\n    type: actionTypes.UPDATE_SHEET_NUMBER_SUBTRACTION_MN,\n    payload: value,\n});\n\nexport type SubtractionMNActionsType = ReturnType<\n    | typeof updateProblemNumber\n    | typeof updateFromValue\n    | typeof updateToValue\n    | typeof updateRestrictions\n    | typeof updateSheetNumber\n>;\n","import { typedAction } from './types';\nimport { Direction } from '../constants/directions';\n\nexport const actionTypes = {\n    UPDATE_PROBLEM_NUMBER_MULTIPLICATION: 'UPDATE_PROBLEM_NUMBER_MULTIPLICATION',\n    UPDATE_NUMBER_OF_DIGITS_MULTIPLICATION: 'UPDATE_NUMBER_OF_DIGITS_MULTIPLICATION',\n    UPDATE_PROBLEM_DIRECTION_MULTIPLICATION: 'UPDATE_PROBLEM_DIRECTION_MULTIPLICATION',\n    UPDATE_SHEET_NUMBER_MULTIPLICATION: 'UPDATE_SHEET_NUMBER_MULTIPLICATION',\n};\n\nexport const updateProblemNumber = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_PROBLEM_NUMBER_MULTIPLICATION,\n    payload: value,\n});\n\nexport const updateNumberOfDigits = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_NUMBER_OF_DIGITS_MULTIPLICATION,\n    payload: value,\n});\n\nexport const updateProblemDirection = (value: Direction): typedAction => ({\n    type: actionTypes.UPDATE_PROBLEM_DIRECTION_MULTIPLICATION,\n    payload: value,\n});\n\nexport const updateSheetNumber = (value: number): typedAction => ({\n    type: actionTypes.UPDATE_SHEET_NUMBER_MULTIPLICATION,\n    payload: value,\n});\n\nexport type MultiplicationActionsType = ReturnType<\n    typeof updateProblemNumber | typeof updateNumberOfDigits | typeof updateProblemDirection | typeof updateSheetNumber\n>;\n","import { typedAction } from './types';\nimport { Direction } from '../constants/directions';\n\nexport const actionTypes = {\n    UPDATE_PROBLEM_NUMBER_DIVISION: 'UPDATE_PROBLEM_NUMBER_DIVISION',\n    UPDATE_NUMBER_OF_DIGITS_DIVISION: 'UPDATE_NUMBER_OF_DIGITS_DIVISION',\n    UPDATE_PROBLEM_DIRECTION_DIVISION: 'UPDATE_PROBLEM_DIRECTION_DIVISION',\n    UPDATE_SHEET_NUMBER_DIVISION: 'UPDATE_SHEET_NUMBER_DIVISION',\n};\n\nexport const updateProblemNumber = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_PROBLEM_NUMBER_DIVISION,\n    payload: value,\n});\n\nexport const updateNumberOfDigits = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_NUMBER_OF_DIGITS_DIVISION,\n    payload: value,\n});\n\nexport const updateProblemDirection = (value: Direction): typedAction => ({\n    type: actionTypes.UPDATE_PROBLEM_DIRECTION_DIVISION,\n    payload: value,\n});\n\nexport const updateSheetNumber = (value: number): typedAction => ({\n    type: actionTypes.UPDATE_SHEET_NUMBER_DIVISION,\n    payload: value,\n});\n\nexport type DivisionActionsType = ReturnType<\n    typeof updateProblemNumber | typeof updateNumberOfDigits | typeof updateProblemDirection | typeof updateSheetNumber\n>;\n","import { typedAction } from './types';\nimport { Direction } from '../constants/directions';\n\nexport const actionTypes = {\n    UPDATE_PROBLEM_NUMBER_TIMESDIVIDE: 'UPDATE_PROBLEM_NUMBER_TIMESDIVIDE',\n    UPDATE_NUMBER_OF_DIGITS_TIMESDIVIDE: 'UPDATE_NUMBER_OF_DIGITS_TIMESDIVIDE',\n    UPDATE_PROBLEM_DIRECTION_TIMESDIVIDE: 'UPDATE_PROBLEM_DIRECTION_TIMESDIVIDE',\n    UPDATE_SHEET_NUMBER_TIMESDIVIDE: 'UPDATE_SHEET_NUMBER_TIMESDIVIDE',\n};\n\nexport const updateProblemNumber = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_PROBLEM_NUMBER_TIMESDIVIDE,\n    payload: value,\n});\n\nexport const updateNumberOfDigits = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_NUMBER_OF_DIGITS_TIMESDIVIDE,\n    payload: value,\n});\n\nexport const updateProblemDirection = (value: Direction): typedAction => ({\n    type: actionTypes.UPDATE_PROBLEM_DIRECTION_TIMESDIVIDE,\n    payload: value,\n});\n\nexport const updateSheetNumber = (value: number): typedAction => ({\n    type: actionTypes.UPDATE_SHEET_NUMBER_TIMESDIVIDE,\n    payload: value,\n});\n\nexport type MixedTimesDivideActionsType = ReturnType<\n    typeof updateProblemNumber | typeof updateNumberOfDigits | typeof updateProblemDirection | typeof updateSheetNumber\n>;\n","import { typedAction } from './types';\n\nexport const actionTypes = {\n    UPDATE_PROBLEM_NUMBER_TIMESDIVIDE_MN: 'UPDATE_PROBLEM_NUMBER_TIMESDIVIDE_MN',\n    UPDATE_NUMBER_OF_DIGITS_TIMESDIVIDE_MN: 'UPDATE_NUMBER_OF_DIGITS_TIMESDIVIDE_MN',\n    UPDATE_PROBLEM_DIRECTION_TIMESDIVIDE_MN: 'UPDATE_PROBLEM_DIRECTION_TIMESDIVIDE_MN',\n    UPDATE_SHEET_NUMBER_TIMESDIVIDE_MN: 'UPDATE_SHEET_NUMBER_TIMESDIVIDE_MN',\n};\n\nexport const updateProblemNumber = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_PROBLEM_NUMBER_TIMESDIVIDE_MN,\n    payload: value,\n});\n\nexport const updateNumberOfDigits = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_NUMBER_OF_DIGITS_TIMESDIVIDE_MN,\n    payload: value,\n});\n\nexport const updateSheetNumber = (value: number): typedAction => ({\n    type: actionTypes.UPDATE_SHEET_NUMBER_TIMESDIVIDE_MN,\n    payload: value,\n});\n\nexport type MixedTimesDivideMNActionsType = ReturnType<\n    typeof updateProblemNumber | typeof updateNumberOfDigits | typeof updateSheetNumber\n>;\n","import { typedAction } from './types';\n\nexport const actionTypes = {\n    UPDATE_PROBLEM_NUMBER_GL: 'UPDATE_PROBLEM_NUMBER_GL',\n    UPDATE_NUMBER_OF_DIGITS_GL: 'UPDATE_NUMBER_OF_DIGITS_GL',\n    UPDATE_SHEET_NUMBER_GL: 'UPDATE_SHEET_NUMBER_GL',\n};\n\nexport const updateProblemNumber = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_PROBLEM_NUMBER_GL,\n    payload: value,\n});\n\nexport const updateNumberOfDigits = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_NUMBER_OF_DIGITS_GL,\n    payload: value,\n});\n\nexport const updateSheetNumber = (value: number): typedAction => ({\n    type: actionTypes.UPDATE_SHEET_NUMBER_GL,\n    payload: value,\n});\n\nexport type GreatThanlessThanActionsType = ReturnType<\n    typeof updateProblemNumber | typeof updateNumberOfDigits | typeof updateSheetNumber\n>;\n","import { typedAction } from './types';\n\nexport const actionTypes = {\n    UPDATE_PROBLEM_NUMBER_ADDTHREE: 'UPDATE_PROBLEM_NUMBER_ADDTHREE',\n    UPDATE_NUMBER_OF_DIGITS_ADDTHREE: 'UPDATE_NUMBER_OF_DIGITS_ADDTHREE',\n    UPDATE_SHEET_NUMBER_ADDTHREE: 'UPDATE_SHEET_NUMBER_ADDTHREE',\n};\n\nexport const updateProblemNumber = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_PROBLEM_NUMBER_ADDTHREE,\n    payload: value,\n});\n\nexport const updateNumberOfDigits = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_NUMBER_OF_DIGITS_ADDTHREE,\n    payload: value,\n});\n\nexport const updateSheetNumber = (value: number): typedAction => ({\n    type: actionTypes.UPDATE_SHEET_NUMBER_ADDTHREE,\n    payload: value,\n});\n\nexport type AddThreeNumbersActionsType = ReturnType<\n    typeof updateProblemNumber | typeof updateNumberOfDigits | typeof updateSheetNumber\n>;\n","import { typedAction } from './types';\n\nexport const actionTypes = {\n    UPDATE_PROBLEM_NUMBER_ADDMINUSTHREE: 'UPDATE_PROBLEM_NUMBER_ADDMINUSTHREE',\n    UPDATE_NUMBER_OF_DIGITS_ADDMINUSTHREE: 'UPDATE_NUMBER_OF_DIGITS_ADDMINUSTHREE',\n    UPDATE_SHEET_NUMBER_ADDMINUSTHREE: 'UPDATE_SHEET_NUMBER_ADDMINUSTHREE',\n};\n\nexport const updateProblemNumber = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_PROBLEM_NUMBER_ADDMINUSTHREE,\n    payload: value,\n});\n\nexport const updateNumberOfDigits = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_NUMBER_OF_DIGITS_ADDMINUSTHREE,\n    payload: value,\n});\n\nexport const updateSheetNumber = (value: number): typedAction => ({\n    type: actionTypes.UPDATE_SHEET_NUMBER_ADDMINUSTHREE,\n    payload: value,\n});\n\nexport type AddMinusThreeNumbersActionsType = ReturnType<\n    typeof updateProblemNumber | typeof updateNumberOfDigits | typeof updateSheetNumber\n>;\n","import { typedAction } from './types';\n\nexport const actionTypes = {\n    UPDATE_PROBLEM_NUMBER_MULTIPLICATION_MN: 'UPDATE_PROBLEM_NUMBER_MULTIPLICATION_MN',\n    UPDATE_NUMBER_OF_DIGITS_MULTIPLICATION_MN: 'UPDATE_NUMBER_OF_DIGITS_MULTIPLICATION_MN',\n    UPDATE_SHEET_NUMBER_MULTIPLICATION_MN: 'UPDATE_SHEET_NUMBER_MULTIPLICATION_MN',\n};\n\nexport const updateProblemNumber = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_PROBLEM_NUMBER_MULTIPLICATION_MN,\n    payload: value,\n});\n\nexport const updateNumberOfDigits = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_NUMBER_OF_DIGITS_MULTIPLICATION_MN,\n    payload: value,\n});\n\nexport const updateSheetNumber = (value: number): typedAction => ({\n    type: actionTypes.UPDATE_SHEET_NUMBER_MULTIPLICATION_MN,\n    payload: value,\n});\n\nexport type MultiplicationMNActionsType = ReturnType<\n    typeof updateProblemNumber | typeof updateNumberOfDigits | typeof updateSheetNumber\n>;\n","import { typedAction } from './types';\n\nexport const actionTypes = {\n    UPDATE_PROBLEM_NUMBER_ADDTHREE_MN: 'UPDATE_PROBLEM_NUMBER_ADDTHREE_MN',\n    UPDATE_NUMBER_OF_DIGITS_ADDTHREE_MN: 'UPDATE_NUMBER_OF_DIGITS_ADDTHREE_MN',\n    UPDATE_SHEET_NUMBER_ADDTHREE_MN: 'UPDATE_SHEET_NUMBER_ADDTHREE_MN',\n};\n\nexport const updateProblemNumber = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_PROBLEM_NUMBER_ADDTHREE_MN,\n    payload: value,\n});\n\nexport const updateNumberOfDigits = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_NUMBER_OF_DIGITS_ADDTHREE_MN,\n    payload: value,\n});\n\nexport const updateSheetNumber = (value: number): typedAction => ({\n    type: actionTypes.UPDATE_SHEET_NUMBER_ADDTHREE_MN,\n    payload: value,\n});\n\nexport type AddThreeNumbersMNActionsType = ReturnType<\n    typeof updateProblemNumber | typeof updateNumberOfDigits | typeof updateSheetNumber\n>;\n","import { typedAction } from './types';\n\nexport const actionTypes = {\n    UPDATE_PROBLEM_NUMBER_DIVISION_MN: 'UPDATE_PROBLEM_NUMBER_DIVISION_MN',\n    UPDATE_NUMBER_OF_DIGITS_DIVISION_MN: 'UPDATE_NUMBER_OF_DIGITS_DIVISION_MN',\n    UPDATE_SHEET_NUMBER_DIVISION_MN: 'UPDATE_SHEET_NUMBER_DIVISION_MN',\n};\n\nexport const updateProblemNumber = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_PROBLEM_NUMBER_DIVISION_MN,\n    payload: value,\n});\n\nexport const updateNumberOfDigits = (value: string): typedAction => ({\n    type: actionTypes.UPDATE_NUMBER_OF_DIGITS_DIVISION_MN,\n    payload: value,\n});\n\nexport const updateSheetNumber = (value: number): typedAction => ({\n    type: actionTypes.UPDATE_SHEET_NUMBER_DIVISION_MN,\n    payload: value,\n});\n\nexport type DivisionMNActionsType = ReturnType<\n    typeof updateProblemNumber | typeof updateNumberOfDigits | typeof updateSheetNumber\n>;\n"],"sourceRoot":""}